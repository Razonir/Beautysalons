{"version":3,"file":"angular-pipes.js","sources":["ng://angular-pipes/utils/utils.ts","ng://angular-pipes/aggregate/group-by.pipe.ts","ng://angular-pipes/aggregate/max.pipe.ts","ng://angular-pipes/aggregate/mean.pipe.ts","ng://angular-pipes/aggregate/min.pipe.ts","ng://angular-pipes/aggregate/sum.pipe.ts","ng://angular-pipes/aggregate/aggregate.module.ts","ng://angular-pipes/array/empty.pipe.ts","ng://angular-pipes/array/head.pipe.ts","ng://angular-pipes/array/initial.pipe.ts","ng://angular-pipes/array/last.pipe.ts","ng://angular-pipes/array/join.pipe.ts","ng://angular-pipes/array/tail.pipe.ts","ng://angular-pipes/array/uniq.pipe.ts","ng://angular-pipes/array/without.pipe.ts","ng://angular-pipes/array/map.pipe.ts","ng://angular-pipes/array/where.pipe.ts","ng://angular-pipes/array/first-or-default.pipe.ts","ng://angular-pipes/array/range.pipe.ts","ng://angular-pipes/array/pluck.pipe.ts","ng://angular-pipes/array/reverse.pipe.ts","ng://angular-pipes/array/order-by.pipe.ts","ng://angular-pipes/array/count.pipe.ts","ng://angular-pipes/array/some.pipe.ts","ng://angular-pipes/array/every.pipe.ts","ng://angular-pipes/array/shuffle.pipe.ts","ng://angular-pipes/array/take.pipe.ts","ng://angular-pipes/array/drop.pipe.ts","ng://angular-pipes/array/deep.pipe.ts","ng://angular-pipes/array/chunk.pipe.ts","ng://angular-pipes/array/flatten.pipe.ts","ng://angular-pipes/array/intersection.pipe.ts","ng://angular-pipes/array/union.pipe.ts","ng://angular-pipes/array/take-while.pipe.ts","ng://angular-pipes/array/take-until.pipe.ts","ng://angular-pipes/array/array.module.ts","ng://angular-pipes/boolean/is-equal.pipe.ts","ng://angular-pipes/boolean/is-greater-or-equal.pipe.ts","ng://angular-pipes/boolean/is-greater.pipe.ts","ng://angular-pipes/boolean/is-identical.pipe.ts","ng://angular-pipes/boolean/is-less-or-equal.pipe.ts","ng://angular-pipes/boolean/is-less.pipe.ts","ng://angular-pipes/boolean/is-not-equal.pipe.ts","ng://angular-pipes/boolean/is-not-identical.pipe.ts","ng://angular-pipes/boolean/is-null.pipe.ts","ng://angular-pipes/boolean/is-undefined.pipe.ts","ng://angular-pipes/boolean/is-nil.pipe.ts","ng://angular-pipes/boolean/is-function.pipe.ts","ng://angular-pipes/boolean/is-number.pipe.ts","ng://angular-pipes/boolean/is-string.pipe.ts","ng://angular-pipes/boolean/is-array.pipe.ts","ng://angular-pipes/boolean/is-object.pipe.ts","ng://angular-pipes/boolean/is-defined.pipe.ts","ng://angular-pipes/boolean/boolean.module.ts","ng://angular-pipes/math/bytes.pipe.ts","ng://angular-pipes/math/ceil.pipe.ts","ng://angular-pipes/math/floor.pipe.ts","ng://angular-pipes/math/round.pipe.ts","ng://angular-pipes/math/degrees.pipe.ts","ng://angular-pipes/math/radians.pipe.ts","ng://angular-pipes/math/random.pipe.ts","ng://angular-pipes/math/sqrt.pipe.ts","ng://angular-pipes/math/pow.pipe.ts","ng://angular-pipes/math/abs.pipe.ts","ng://angular-pipes/math/ordinal.pipe.ts","ng://angular-pipes/math/math.module.ts","ng://angular-pipes/object/keys.pipe.ts","ng://angular-pipes/object/to-array.pipe.ts","ng://angular-pipes/object/defaults.pipe.ts","ng://angular-pipes/object/object.module.ts","ng://angular-pipes/string/left-pad.pipe.ts","ng://angular-pipes/string/match.pipe.ts","ng://angular-pipes/string/pad.pipe.ts","ng://angular-pipes/string/replace.pipe.ts","ng://angular-pipes/string/right-pad.pipe.ts","ng://angular-pipes/string/split.pipe.ts","ng://angular-pipes/string/test.pipe.ts","ng://angular-pipes/string/trim.pipe.ts","ng://angular-pipes/string/newlines.pipe.ts","ng://angular-pipes/string/capitalize.pipe.ts","ng://angular-pipes/string/upperfirst.pipe.ts","ng://angular-pipes/string/template.pipe.ts","ng://angular-pipes/string/encode-uri.pipe.ts","ng://angular-pipes/string/encode-uri-component.pipe.ts","ng://angular-pipes/string/decode-uri.pipe.ts","ng://angular-pipes/string/decode-uri-component.pipe.ts","ng://angular-pipes/string/truncate.pipe.ts","ng://angular-pipes/string/repeat.pipe.ts","ng://angular-pipes/string/slugify.pipe.ts","ng://angular-pipes/string/strip-tags.pipe.ts","ng://angular-pipes/string/latinize.pipe.ts","ng://angular-pipes/string/wrap.pipe.ts","ng://angular-pipes/string/with.pipe.ts","ng://angular-pipes/string/reverse-str.pipe.ts","ng://angular-pipes/string/string.module.ts","ng://angular-pipes/pipes.module.ts"],"sourcesContent":["export type CollectionPredicate = (item?: any, index?: number, collection?: any[]) => boolean;\r\n\r\nexport function isUndefined(value: any): value is undefined {\r\n  return typeof value === 'undefined';\r\n}\r\n\r\nexport function isNull(value: any): value is null {\r\n  return value === null;\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n  return typeof value === 'number';\r\n}\r\n\r\nexport function isNumberFinite(value: any): value is number {\r\n  return isNumber(value) && isFinite(value);\r\n}\r\n\r\n// Not strict positive\r\nexport function isPositive(value: number): boolean {\r\n  return value >= 0;\r\n}\r\n\r\nexport function isInteger(value: number): boolean {\r\n  // No rest, is an integer\r\n  return value % 1 === 0;\r\n}\r\n\r\nexport function isNil(value: any): value is null | undefined {\r\n  return value === null || typeof value === 'undefined';\r\n}\r\n\r\nexport function isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\nexport function isObject(value: any): boolean {\r\n  return value !== null && typeof value === 'object';\r\n}\r\n\r\nexport function isArray(value: any): boolean {\r\n  return Array.isArray(value);\r\n}\r\n\r\nexport function isFunction(value: any): boolean {\r\n  return typeof value === 'function';\r\n}\r\n\r\nexport function toDecimal(value: number, decimal: number): number {\r\n  return Math.round(value * Math.pow(10, decimal)) / Math.pow(10, decimal);\r\n}\r\n\r\nexport function upperFirst(value: string): string {\r\n  return value.slice(0, 1).toUpperCase() + value.slice(1);\r\n}\r\n\r\nexport function createRound(method: string): Function {\r\n  // <any>Math to suppress error\r\n  const func: any = (<any>Math)[method];\r\n  return function(value: number, precision: number = 0) {\r\n    if (typeof value === 'string') {\r\n      throw new TypeError('Rounding method needs a number');\r\n    }\r\n\r\n    if (typeof precision !== 'number' || isNaN(precision)) {\r\n      precision = 0;\r\n    }\r\n\r\n    if (precision) {\r\n      let pair = `${value}e`.split('e');\r\n      const val = func(`${pair[0]}e` + (+pair[1] + precision));\r\n\r\n      pair = `${val}e`.split('e');\r\n      return +(pair[0] + 'e' + (+pair[1] - precision));\r\n    }\r\n\r\n    return func(value);\r\n  };\r\n}\r\n\r\nexport function leftPad(str: string, len: number = 0, ch: any = ' ') {\r\n  str = String(str);\r\n  ch = toString(ch);\r\n  let i = -1;\r\n  const length = len - str.length;\r\n\r\n  while (++i < length && str.length + ch.length <= len) {\r\n    str = ch + str;\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nexport function rightPad(str: string, len: number = 0, ch: any = ' ') {\r\n  str = String(str);\r\n  ch = toString(ch);\r\n\r\n  let i = -1;\r\n  const length = len - str.length;\r\n\r\n  while (++i < length && str.length + ch.length <= len) {\r\n    str += ch;\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nexport function toString(value: number | string) {\r\n  return `${value}`;\r\n}\r\n\r\nexport function pad(str: string, len: number = 0, ch: any = ' '): string {\r\n  str = String(str);\r\n  ch = toString(ch);\r\n  let i = -1;\r\n  const length = len - str.length;\r\n\r\n  let left = true;\r\n  while (++i < length) {\r\n    const l = str.length + ch.length <= len ? str.length + ch.length : str.length + 1;\r\n\r\n    if (left) {\r\n      str = leftPad(str, l, ch);\r\n    } else {\r\n      str = rightPad(str, l, ch);\r\n    }\r\n\r\n    left = !left;\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nexport function flatten(input: any[], index: number = 0): any[] {\r\n  if (index >= input.length) {\r\n    return input;\r\n  }\r\n\r\n  if (isArray(input[index])) {\r\n    return flatten(input.slice(0, index).concat(input[index], input.slice(index + 1)), index);\r\n  }\r\n\r\n  return flatten(input, index + 1);\r\n}\r\n\r\nexport function getProperty(value: { [key: string]: any }, key: string): any {\r\n  if (isNil(value) || !isObject(value)) {\r\n    return undefined;\r\n  }\r\n\r\n  const keys: string[] = key.split('.');\r\n  let result: any = value[keys.shift()!];\r\n\r\n  for (const key of keys) {\r\n    if (isNil(result) || !isObject(result)) {\r\n      return undefined;\r\n    }\r\n\r\n    result = result[key];\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function sum(input: Array<number>, initial = 0): number {\r\n  return input.reduce((previous: number, current: number) => previous + current, initial);\r\n}\r\n\r\n// http://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array-in-javascript\r\nexport function shuffle(input: any): any {\r\n  if (!isArray(input)) {\r\n    return input;\r\n  }\r\n\r\n  const copy = [...input];\r\n\r\n  for (let i = copy.length; i; --i) {\r\n    const j = Math.floor(Math.random() * i);\r\n    const x = copy[i - 1];\r\n    copy[i - 1] = copy[j];\r\n    copy[j] = x;\r\n  }\r\n\r\n  return copy;\r\n}\r\n\r\nexport function deepIndexOf(collection: any[], value: any) {\r\n  let index = -1;\r\n  const length = collection.length;\r\n\r\n  while (++index < length) {\r\n    if (deepEqual(value, collection[index])) {\r\n      return index;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nexport function deepEqual(a: any, b: any) {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n\r\n  if (!(typeof a === 'object' && typeof b === 'object')) {\r\n    return a === b;\r\n  }\r\n\r\n  const keysA = Object.keys(a);\r\n  const keysB = Object.keys(b);\r\n\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  }\r\n\r\n  // Test for A's keys different from B.\r\n  var hasOwn = Object.prototype.hasOwnProperty;\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    const key = keysA[i];\r\n    if (!hasOwn.call(b, keysA[i]) || !deepEqual(a[key], b[key])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function isDeepObject(object: any) {\r\n  return object.__isDeepObject__;\r\n}\r\n\r\nexport function wrapDeep(object: any) {\r\n  return new DeepWrapper(object);\r\n}\r\n\r\nexport function unwrapDeep(object: any) {\r\n  if (isDeepObject(object)) {\r\n    return object.data;\r\n  }\r\n\r\n  return object;\r\n}\r\n\r\nexport class DeepWrapper {\r\n  public __isDeepObject__: boolean = true;\r\n\r\n  constructor(public data: any) {}\r\n}\r\n\r\nexport function count(input: any): any {\r\n  if (!isArray(input) && !isObject(input) && !isString(input)) {\r\n    return input;\r\n  }\r\n\r\n  if (isObject(input)) {\r\n    return Object.keys(input).map(value => input[value]).length;\r\n  }\r\n\r\n  return input.length;\r\n}\r\n\r\nexport function empty(input: any): any {\r\n  if (!isArray(input)) {\r\n    return input;\r\n  }\r\n\r\n  return input.length === 0;\r\n}\r\n\r\nexport function every(input: any, predicate: CollectionPredicate) {\r\n  if (!isArray(input) || !predicate) {\r\n    return input;\r\n  }\r\n\r\n  let result = true;\r\n  let i = -1;\r\n\r\n  while (++i < input.length && result) {\r\n    result = predicate(input[i], i, input);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function takeUntil(input: any[], predicate: CollectionPredicate) {\r\n  let i = -1;\r\n  const result: any = [];\r\n  while (++i < input.length && !predicate(input[i], i, input)) {\r\n    result[i] = input[i];\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function takeWhile(input: any[], predicate: CollectionPredicate) {\r\n  return takeUntil(input, (item: any, index: number, collection: any[]) => !predicate(item, index, collection));\r\n}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { getProperty, isArray, isUndefined } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'groupBy',\r\n})\r\nexport class GroupByPipe implements PipeTransform {\r\n  transform(input: any, prop: string): Array<any> {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    const arr: { [key: string]: Array<any> } = {};\r\n\r\n    for (const value of input) {\r\n      const field: any = getProperty(value, prop);\r\n\r\n      if (isUndefined(arr[field])) {\r\n        arr[field] = [];\r\n      }\r\n\r\n      arr[field].push(value);\r\n    }\r\n\r\n    return Object.keys(arr).map(key => ({ key, value: arr[key] }));\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [GroupByPipe],\r\n  exports: [GroupByPipe],\r\n})\r\nexport class NgGroupByPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'max',\r\n})\r\nexport class MaxPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (input.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    let max = input[0];\r\n\r\n    input.forEach((value: any) => {\r\n      if (max < value) {\r\n        max = value;\r\n      }\r\n    });\r\n\r\n    return max;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [MaxPipe],\r\n  exports: [MaxPipe],\r\n})\r\nexport class NgMaxPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, sum } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'mean',\r\n})\r\nexport class MeanPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    const count = input.length;\r\n\r\n    if (count === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return sum(input) / count;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [MeanPipe],\r\n  exports: [MeanPipe],\r\n})\r\nexport class NgMeanPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'min',\r\n})\r\nexport class MinPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (input.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    let min = input[0];\r\n\r\n    input.forEach((value: any) => {\r\n      if (min > value) {\r\n        min = value;\r\n      }\r\n    });\r\n\r\n    return min;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [MinPipe],\r\n  exports: [MinPipe],\r\n})\r\nexport class NgMinPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, sum } from '../utils/utils';\r\n\r\n@Pipe({ name: 'sum' })\r\nexport class SumPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    return !isArray(input) ? input : sum(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [SumPipe],\r\n  exports: [SumPipe],\r\n})\r\nexport class NgSumPipeModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgGroupByPipeModule } from './group-by.pipe';\r\nimport { NgMaxPipeModule } from './max.pipe';\r\nimport { NgMeanPipeModule } from './mean.pipe';\r\nimport { NgMinPipeModule } from './min.pipe';\r\nimport { NgSumPipeModule } from './sum.pipe';\r\n\r\n@NgModule({\r\n  imports: [NgGroupByPipeModule, NgMaxPipeModule, NgMeanPipeModule, NgMinPipeModule, NgSumPipeModule],\r\n})\r\nexport class NgAggregatePipesModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { empty } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'empty',\r\n})\r\nexport class EmptyPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    return empty(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [EmptyPipe],\r\n  exports: [EmptyPipe],\r\n})\r\nexport class NgEmptyPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'head',\r\n})\r\nexport class HeadPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    // Will return undefined if length is 0\r\n    return input[0];\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [HeadPipe],\r\n  exports: [HeadPipe],\r\n})\r\nexport class NgHeadPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'initial',\r\n})\r\nexport class InitialPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.slice(0, input.length - 1);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [InitialPipe],\r\n  exports: [InitialPipe],\r\n})\r\nexport class NgInitialPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'last',\r\n})\r\nexport class LastPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    // Returns undefined if empty\r\n    return input[input.length - 1];\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [LastPipe],\r\n  exports: [LastPipe],\r\n})\r\nexport class NgLastPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'join',\r\n})\r\nexport class JoinPipe implements PipeTransform {\r\n  transform(input: any, character: string = ''): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.join(character);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [JoinPipe],\r\n  exports: [JoinPipe],\r\n})\r\nexport class NgJoinPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'tail',\r\n})\r\nexport class TailPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.slice(1, input.length);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TailPipe],\r\n  exports: [TailPipe],\r\n})\r\nexport class NgTailPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, isDeepObject, unwrapDeep, deepIndexOf } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'uniq',\r\n})\r\nexport class UniqPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input) && !isDeepObject(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (isDeepObject(input)) {\r\n      const unwrappedInput = unwrapDeep(input);\r\n      if (!isArray(unwrappedInput)) {\r\n        return unwrappedInput;\r\n      }\r\n\r\n      return unwrappedInput.filter((value: any, index: number) => deepIndexOf(unwrappedInput, value) === index);\r\n    }\r\n\r\n    return input.filter((value: any, index: number) => input.indexOf(value) === index);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [UniqPipe],\r\n  exports: [UniqPipe],\r\n})\r\nexport class NgUniqPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, isDeepObject, unwrapDeep, deepIndexOf } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'without',\r\n})\r\nexport class WithoutPipe implements PipeTransform {\r\n  transform(input: any, ...args: any[]): any {\r\n    if (!isArray(input) && !isDeepObject(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (isDeepObject(input)) {\r\n      const unwrappedInput = unwrapDeep(input);\r\n      if (!isArray(unwrappedInput)) {\r\n        return unwrappedInput;\r\n      }\r\n\r\n      return unwrappedInput.filter((value: any) => deepIndexOf(args, value) === -1);\r\n    }\r\n\r\n    return input.filter((value: any) => args.indexOf(value) === -1);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [WithoutPipe],\r\n  exports: [WithoutPipe],\r\n})\r\nexport class NgWithoutPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'map',\r\n})\r\nexport class MapPipe implements PipeTransform {\r\n  transform(input: any, fn: Function): any {\r\n    if (!isArray(input) || !fn) {\r\n      return input;\r\n    }\r\n\r\n    return input.map(fn);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [MapPipe],\r\n  exports: [MapPipe],\r\n})\r\nexport class NgMapPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, isFunction, getProperty } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'where',\r\n})\r\nexport class WherePipe implements PipeTransform {\r\n  /**\r\n   * Support a function or a value or the shorthand ['key', value] like the lodash shorthand.\r\n   */\r\n  transform(input: any, fn: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (isFunction(fn)) {\r\n      return input.filter(fn);\r\n    } else if (isArray(fn)) {\r\n      const [key, value] = fn;\r\n      return input.filter((item: any) => getProperty(item, key) === value);\r\n    } else if (fn) {\r\n      return input.filter((item: any) => item === fn);\r\n    } else {\r\n      return input;\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [WherePipe],\r\n  exports: [WherePipe],\r\n})\r\nexport class NgWherePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, isFunction, getProperty, CollectionPredicate } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'firstOrDefault',\r\n})\r\nexport class FirstOrDefaultPipe implements PipeTransform {\r\n  private static find(input: any[], predicate: CollectionPredicate, defaultValue?: any): any {\r\n    let found = false;\r\n    let result: any;\r\n    let i = -1;\r\n\r\n    while (!found && ++i < input.length) {\r\n      found = predicate(input[i], i, input);\r\n    }\r\n\r\n    if (found) {\r\n      result = input[i];\r\n    }\r\n\r\n    if (typeof result === 'undefined' && typeof defaultValue !== 'undefined') {\r\n      result = defaultValue;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  transform(input: any, predicate: CollectionPredicate | string[] | any, defaultValue?: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (isFunction(predicate)) {\r\n      return FirstOrDefaultPipe.find(input, <CollectionPredicate>predicate, defaultValue);\r\n    } else if (isArray(predicate)) {\r\n      const [key, value] = <string[]>predicate;\r\n      return FirstOrDefaultPipe.find(input, (item: any) => getProperty(item, key) === value, defaultValue);\r\n    } else if (predicate) {\r\n      return FirstOrDefaultPipe.find(input, item => item === <any>predicate, defaultValue);\r\n    } else {\r\n      return input;\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [FirstOrDefaultPipe],\r\n  exports: [FirstOrDefaultPipe],\r\n})\r\nexport class NgFirstOrDefaultPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'range',\r\n})\r\nexport class RangePipe implements PipeTransform {\r\n  transform(_input: any, size: number = 0, start: number = 1, step: number = 1): any {\r\n    const range: number[] = [];\r\n    for (let length = 0; length < size; ++length) {\r\n      range.push(start);\r\n      start += step;\r\n    }\r\n\r\n    return range;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [RangePipe],\r\n  exports: [RangePipe],\r\n})\r\nexport class NgRangePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, getProperty } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'pluck',\r\n})\r\nexport class PluckPipe implements PipeTransform {\r\n  transform(input: any, key: string): any {\r\n    if (!isArray(input) || !key) {\r\n      return input;\r\n    }\r\n\r\n    return input.map((value: any) => {\r\n      return getProperty(value, key);\r\n    });\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [PluckPipe],\r\n  exports: [PluckPipe],\r\n})\r\nexport class NgPluckPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'reverse',\r\n})\r\nexport class ReversePipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return [...input].reverse();\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ReversePipe],\r\n  exports: [ReversePipe],\r\n})\r\nexport class NgReversePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'orderBy',\r\n})\r\nexport class OrderByPipe implements PipeTransform {\r\n  private static _orderBy(a: any, b: any): number {\r\n    if (a instanceof Date && b instanceof Date) {\r\n      return a < b ? -1 : a > b ? 1 : 0;\r\n    }\r\n\r\n    const floatA = parseFloat(a);\r\n    const floatB = parseFloat(b);\r\n\r\n    if (typeof a === 'string' && typeof b === 'string' && (isNaN(floatA) || isNaN(floatB))) {\r\n      const lowerA = a.toLowerCase();\r\n      const lowerB = b.toLowerCase();\r\n      return lowerA < lowerB ? -1 : lowerA > lowerB ? 1 : 0;\r\n    }\r\n\r\n    return floatA < floatB ? -1 : floatA > floatB ? 1 : 0;\r\n  }\r\n\r\n  transform(input: any, config: any = '+'): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    const configIsArray = isArray(config);\r\n\r\n    // If config === 'param' OR ['param']\r\n    if (!configIsArray || (configIsArray && config.length === 1)) {\r\n      const propertyToCheck: string = configIsArray ? config[0] : config;\r\n      const first = propertyToCheck.substr(0, 1);\r\n      const desc = first === '-'; // First character is '-'\r\n\r\n      // Basic array (if only + or - is present)\r\n      if (!propertyToCheck || propertyToCheck === '-' || propertyToCheck === '+') {\r\n        return [...input].sort((a: any, b: any) => {\r\n          const comparator = OrderByPipe._orderBy(a, b);\r\n          return desc ? -comparator : comparator;\r\n        });\r\n      } else {\r\n        // If contains + or -, substring the property\r\n        const property = first === '+' || desc ? propertyToCheck.substr(1) : propertyToCheck;\r\n\r\n        return [...input].sort((a: any, b: any) => {\r\n          const comparator = OrderByPipe._orderBy(a[property], b[property]);\r\n          return desc ? -comparator : comparator;\r\n        });\r\n      }\r\n    } else {\r\n      // Config is an array of property\r\n\r\n      return [...input].sort((a: any, b: any) => {\r\n        for (let i: number = 0; i < config.length; ++i) {\r\n          const first = config[i].substr(0, 1);\r\n          const desc = first === '-';\r\n          const property = first === '+' || desc ? config[i].substr(1) : config[i];\r\n\r\n          const comparator = OrderByPipe._orderBy(a[property], b[property]);\r\n          const comparison = desc ? -comparator : comparator;\r\n\r\n          if (comparison !== 0) {\r\n            return comparison;\r\n          }\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [OrderByPipe],\r\n  exports: [OrderByPipe],\r\n})\r\nexport class NgOrderByPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { count } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'count',\r\n})\r\nexport class CountPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    return count(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CountPipe],\r\n  exports: [CountPipe],\r\n})\r\nexport class NgCountPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'some',\r\n})\r\nexport class SomePipe implements PipeTransform {\r\n  transform(input: any, predicate: Function): any {\r\n    if (!isArray(input) || !predicate) {\r\n      return input;\r\n    }\r\n\r\n    let result = false;\r\n    let i = -1;\r\n\r\n    while (++i < input.length && !result) {\r\n      result = predicate(input[i], i, input);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [SomePipe],\r\n  exports: [SomePipe],\r\n})\r\nexport class NgSomePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { every, CollectionPredicate } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'every',\r\n})\r\nexport class EveryPipe implements PipeTransform {\r\n  transform(input: any, predicate: CollectionPredicate): any {\r\n    return every(input, predicate);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [EveryPipe],\r\n  exports: [EveryPipe],\r\n})\r\nexport class NgEveryPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { shuffle } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'shuffle',\r\n})\r\nexport class ShufflePipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    return shuffle(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ShufflePipe],\r\n  exports: [ShufflePipe],\r\n})\r\nexport class NgShufflePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'take',\r\n})\r\nexport class TakePipe implements PipeTransform {\r\n  transform(input: any, quantity?: number): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.slice(0, quantity || 1);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TakePipe],\r\n  exports: [TakePipe],\r\n})\r\nexport class NgTakePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'drop',\r\n})\r\nexport class DropPipe implements PipeTransform {\r\n  transform(input: any, quantity?: number): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.slice(quantity || 1, input.lenth);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [DropPipe],\r\n  exports: [DropPipe],\r\n})\r\nexport class NgDropPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { wrapDeep, isDeepObject } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'deep',\r\n})\r\nexport class DeepPipe implements PipeTransform {\r\n  transform(value: any): any {\r\n    if (isDeepObject(value)) {\r\n      return value;\r\n    }\r\n\r\n    return wrapDeep(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [DeepPipe],\r\n  exports: [DeepPipe],\r\n})\r\nexport class NgDeepPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'chunk',\r\n})\r\nexport class ChunkPipe implements PipeTransform {\r\n  transform(input: any, size: number = 1): any {\r\n    if (!isArray(input)) {\r\n      return input;\r\n    }\r\n\r\n    return [].concat.apply(\r\n      [],\r\n      input.map((_elem: any, i: number) => {\r\n        return i % size ? [] : [input.slice(i, i + size)];\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ChunkPipe],\r\n  exports: [ChunkPipe],\r\n})\r\nexport class NgChunkPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, isDeepObject, unwrapDeep, flatten } from '../utils/utils';\r\n\r\n@Pipe({ name: 'flatten' })\r\nexport class FlattenPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    const isDeep = isDeepObject(input);\r\n    if (!isArray(input) && !isDeep) {\r\n      return input;\r\n    }\r\n\r\n    if (isDeep) {\r\n      const unwrapped = unwrapDeep(input);\r\n      if (!isArray(unwrapped)) {\r\n        return unwrapped;\r\n      }\r\n\r\n      return flatten(unwrapped, 0);\r\n    }\r\n\r\n    return [].concat.apply([], input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [FlattenPipe],\r\n  exports: [FlattenPipe],\r\n})\r\nexport class NgFlattenPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, isDeepObject, unwrapDeep, deepIndexOf } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'intersection',\r\n})\r\nexport class IntersectionPipe implements PipeTransform {\r\n  transform(a?: any, b?: any): any {\r\n    if ((!isArray(a) && !isDeepObject(a)) || !isArray(b)) {\r\n      return [];\r\n    }\r\n\r\n    if (isDeepObject(a)) {\r\n      const unwrapped = unwrapDeep(a);\r\n      if (!isArray(unwrapped)) {\r\n        return [];\r\n      }\r\n\r\n      return unwrapped.reduce(\r\n        (intersection: any[], value: any) =>\r\n          intersection.concat(deepIndexOf(b, value) !== -1 && deepIndexOf(intersection, value) === -1 ? value : []),\r\n        []\r\n      );\r\n    }\r\n\r\n    return a.reduce(\r\n      (intersection: any[], value: any) =>\r\n        intersection.concat(b.indexOf(value) !== -1 && intersection.indexOf(value) === -1 ? value : []),\r\n      []\r\n    );\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IntersectionPipe],\r\n  exports: [IntersectionPipe],\r\n})\r\nexport class NgIntersectionPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, isDeepObject, unwrapDeep, deepIndexOf } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'union',\r\n})\r\nexport class UnionPipe implements PipeTransform {\r\n  transform(a?: any, b?: any): any {\r\n    if ((!isArray(a) && !isDeepObject(a)) || !isArray(b)) {\r\n      return [];\r\n    }\r\n\r\n    if (isDeepObject(a)) {\r\n      const unwrapped = unwrapDeep(a);\r\n      if (!isArray(unwrapped)) {\r\n        return [];\r\n      }\r\n\r\n      return []\r\n        .concat(unwrapped)\r\n        .concat(b)\r\n        .filter((value: any, index: number, input: any[]) => deepIndexOf(input, value) === index);\r\n    }\r\n\r\n    return []\r\n      .concat(a)\r\n      .concat(b)\r\n      .filter((value: any, index: number, input: any[]) => input.indexOf(value) === index);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [UnionPipe],\r\n  exports: [UnionPipe],\r\n})\r\nexport class NgUnionPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, takeWhile, CollectionPredicate, isNil } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'takeWhile',\r\n})\r\nexport class TakeWhilePipe implements PipeTransform {\r\n  transform(input: any, predicate?: CollectionPredicate): any {\r\n    if (!isArray(input) || isNil(predicate)) {\r\n      return input;\r\n    }\r\n\r\n    return takeWhile(input, predicate);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TakeWhilePipe],\r\n  exports: [TakeWhilePipe],\r\n})\r\nexport class NgTakeWhilePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isArray, takeUntil, CollectionPredicate, isNil } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'takeUntil',\r\n})\r\nexport class TakeUntilPipe implements PipeTransform {\r\n  transform(input: any, predicate?: CollectionPredicate): any {\r\n    if (!isArray(input) || isNil(predicate)) {\r\n      return input;\r\n    }\r\n\r\n    return takeUntil(input, predicate);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TakeUntilPipe],\r\n  exports: [TakeUntilPipe],\r\n})\r\nexport class NgTakeUntilPipeModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgEmptyPipeModule } from './empty.pipe';\r\nimport { NgHeadPipeModule } from './head.pipe';\r\nimport { NgInitialPipeModule } from './initial.pipe';\r\nimport { NgLastPipeModule } from './last.pipe';\r\nimport { NgJoinPipeModule } from './join.pipe';\r\nimport { NgTailPipeModule } from './tail.pipe';\r\nimport { NgUniqPipeModule } from './uniq.pipe';\r\nimport { NgWithoutPipeModule } from './without.pipe';\r\nimport { NgMapPipeModule } from './map.pipe';\r\nimport { NgWherePipeModule } from './where.pipe';\r\nimport { NgFirstOrDefaultPipeModule } from './first-or-default.pipe';\r\nimport { NgRangePipeModule } from './range.pipe';\r\nimport { NgPluckPipeModule } from './pluck.pipe';\r\nimport { NgReversePipeModule } from './reverse.pipe';\r\nimport { NgOrderByPipeModule } from './order-by.pipe';\r\nimport { NgCountPipeModule } from './count.pipe';\r\nimport { NgSomePipeModule } from './some.pipe';\r\nimport { NgEveryPipeModule } from './every.pipe';\r\nimport { NgShufflePipeModule } from './shuffle.pipe';\r\nimport { NgTakePipeModule } from './take.pipe';\r\nimport { NgDropPipeModule } from './drop.pipe';\r\nimport { NgDeepPipeModule } from './deep.pipe';\r\nimport { NgChunkPipeModule } from './chunk.pipe';\r\nimport { NgFlattenPipeModule } from './flatten.pipe';\r\nimport { NgIntersectionPipeModule } from './intersection.pipe';\r\nimport { NgUnionPipeModule } from './union.pipe';\r\nimport { NgTakeWhilePipeModule } from './take-while.pipe';\r\nimport { NgTakeUntilPipeModule } from './take-until.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgChunkPipeModule,\r\n    NgCountPipeModule,\r\n    NgDeepPipeModule,\r\n    NgDropPipeModule,\r\n    NgEmptyPipeModule,\r\n    NgEveryPipeModule,\r\n    NgFirstOrDefaultPipeModule,\r\n    NgFlattenPipeModule,\r\n    NgHeadPipeModule,\r\n    NgInitialPipeModule,\r\n    NgIntersectionPipeModule,\r\n    NgJoinPipeModule,\r\n    NgLastPipeModule,\r\n    NgMapPipeModule,\r\n    NgOrderByPipeModule,\r\n    NgPluckPipeModule,\r\n    NgRangePipeModule,\r\n    NgReversePipeModule,\r\n    NgShufflePipeModule,\r\n    NgSomePipeModule,\r\n    NgTailPipeModule,\r\n    NgTakeUntilPipeModule,\r\n    NgTakeWhilePipeModule,\r\n    NgTakePipeModule,\r\n    NgUnionPipeModule,\r\n    NgUniqPipeModule,\r\n    NgWherePipeModule,\r\n    NgWithoutPipeModule,\r\n  ],\r\n})\r\nexport class NgArrayPipesModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'equal',\r\n})\r\nexport class IsEqualPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first == second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsEqualPipe],\r\n  exports: [IsEqualPipe],\r\n})\r\nexport class NgIsEqualPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'greaterOrEqual',\r\n})\r\nexport class IsGreaterOrEqualPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first >= second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsGreaterOrEqualPipe],\r\n  exports: [IsGreaterOrEqualPipe],\r\n})\r\nexport class NgIsGreaterOrEqualPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'greater',\r\n})\r\nexport class IsGreaterPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first > second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsGreaterPipe],\r\n  exports: [IsGreaterPipe],\r\n})\r\nexport class NgIsGreaterPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'identical',\r\n})\r\nexport class IsIdenticalPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first === second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsIdenticalPipe],\r\n  exports: [IsIdenticalPipe],\r\n})\r\nexport class NgIsIdenticalPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'lessOrEqual',\r\n})\r\nexport class IsLessOrEqualPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first <= second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsLessOrEqualPipe],\r\n  exports: [IsLessOrEqualPipe],\r\n})\r\nexport class NgIsLessOrEqualPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'less',\r\n})\r\nexport class IsLessPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first < second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsLessPipe],\r\n  exports: [IsLessPipe],\r\n})\r\nexport class NgIsLessPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'notEqual',\r\n})\r\nexport class IsNotEqualPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first != second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsNotEqualPipe],\r\n  exports: [IsNotEqualPipe],\r\n})\r\nexport class NgIsNotEqualPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'notIdentical',\r\n})\r\nexport class IsNotIdenticalPipe implements PipeTransform {\r\n  transform(first: any, second: any): boolean {\r\n    return first !== second;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsNotIdenticalPipe],\r\n  exports: [IsNotIdenticalPipe],\r\n})\r\nexport class NgIsNotIdenticalPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isNull } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isNull',\r\n})\r\nexport class IsNullPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isNull(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsNullPipe],\r\n  exports: [IsNullPipe],\r\n})\r\nexport class NgIsNullPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isUndefined } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isUndefined',\r\n})\r\nexport class IsUndefinedPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isUndefined(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsUndefinedPipe],\r\n  exports: [IsUndefinedPipe],\r\n})\r\nexport class NgIsUndefinedPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isNil } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isNil',\r\n})\r\nexport class IsNilPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isNil(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsNilPipe],\r\n  exports: [IsNilPipe],\r\n})\r\nexport class NgIsNilPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isFunction } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isFunction',\r\n})\r\nexport class IsFunctionPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isFunction(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsFunctionPipe],\r\n  exports: [IsFunctionPipe],\r\n})\r\nexport class NgIsFunctionPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isNumber } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isNumber',\r\n})\r\nexport class IsNumberPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isNumber(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsNumberPipe],\r\n  exports: [IsNumberPipe],\r\n})\r\nexport class NgIsNumberPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isString',\r\n})\r\nexport class IsStringPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isString(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsStringPipe],\r\n  exports: [IsStringPipe],\r\n})\r\nexport class NgIsStringPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isArray } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isArray',\r\n})\r\nexport class IsArrayPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isArray(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsArrayPipe],\r\n  exports: [IsArrayPipe],\r\n})\r\nexport class NgIsArrayPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isObject } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isObject',\r\n})\r\nexport class IsObjectPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return isObject(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsObjectPipe],\r\n  exports: [IsObjectPipe],\r\n})\r\nexport class NgIsObjectPipeModule {}\r\n","import { PipeTransform, Pipe, NgModule } from '@angular/core';\r\nimport { isUndefined } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'isDefined',\r\n})\r\nexport class IsDefinedPipe implements PipeTransform {\r\n  transform(value: any): boolean {\r\n    return !isUndefined(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [IsDefinedPipe],\r\n  exports: [IsDefinedPipe],\r\n})\r\nexport class NgIsDefinedPipeModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgIsEqualPipeModule } from './is-equal.pipe';\r\nimport { NgIsGreaterOrEqualPipeModule } from './is-greater-or-equal.pipe';\r\nimport { NgIsGreaterPipeModule } from './is-greater.pipe';\r\nimport { NgIsIdenticalPipeModule } from './is-identical.pipe';\r\nimport { NgIsLessOrEqualPipeModule } from './is-less-or-equal.pipe';\r\nimport { NgIsLessPipeModule } from './is-less.pipe';\r\nimport { NgIsNotEqualPipeModule } from './is-not-equal.pipe';\r\nimport { NgIsNotIdenticalPipeModule } from './is-not-identical.pipe';\r\nimport { NgIsNullPipeModule } from './is-null.pipe';\r\nimport { NgIsUndefinedPipeModule } from './is-undefined.pipe';\r\nimport { NgIsNilPipeModule } from './is-nil.pipe';\r\nimport { NgIsFunctionPipeModule } from './is-function.pipe';\r\nimport { NgIsNumberPipeModule } from './is-number.pipe';\r\nimport { NgIsStringPipeModule } from './is-string.pipe';\r\nimport { NgIsArrayPipeModule } from './is-array.pipe';\r\nimport { NgIsObjectPipeModule } from './is-object.pipe';\r\nimport { NgIsDefinedPipeModule } from './is-defined.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgIsNullPipeModule,\r\n    NgIsUndefinedPipeModule,\r\n    NgIsNilPipeModule,\r\n    NgIsFunctionPipeModule,\r\n    NgIsNumberPipeModule,\r\n    NgIsStringPipeModule,\r\n    NgIsArrayPipeModule,\r\n    NgIsObjectPipeModule,\r\n    NgIsDefinedPipeModule,\r\n  ],\r\n})\r\nexport class NgTypesPipesModule {}\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgIsEqualPipeModule,\r\n    NgIsGreaterOrEqualPipeModule,\r\n    NgIsGreaterPipeModule,\r\n    NgIsIdenticalPipeModule,\r\n    NgIsLessOrEqualPipeModule,\r\n    NgIsLessPipeModule,\r\n    NgIsNotEqualPipeModule,\r\n    NgIsNotIdenticalPipeModule,\r\n  ],\r\n})\r\nexport class NgConditionsPipesModule {}\r\n\r\n@NgModule({\r\n  imports: [NgConditionsPipesModule, NgTypesPipesModule],\r\n})\r\nexport class NgBooleanPipesModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite, isPositive, isInteger, toDecimal } from '../utils/utils';\r\n\r\nexport type ByteUnit = 'B' | 'kB' | 'KB' | 'MB' | 'GB' | 'TB';\r\n\r\n@Pipe({\r\n  name: 'bytes',\r\n})\r\nexport class BytesPipe implements PipeTransform {\r\n  static formats: { [key: string]: { max: number; prev?: ByteUnit } } = {\r\n    B: { max: 1024 },\r\n    kB: { max: Math.pow(1024, 2), prev: 'B' },\r\n    KB: { max: Math.pow(1024, 2), prev: 'B' }, // Backward compatible\r\n    MB: { max: Math.pow(1024, 3), prev: 'kB' },\r\n    GB: { max: Math.pow(1024, 4), prev: 'MB' },\r\n    TB: { max: Number.MAX_SAFE_INTEGER, prev: 'GB' },\r\n  };\r\n\r\n  transform(input: any, decimal: number = 0, from: ByteUnit = 'B', to?: ByteUnit): any {\r\n    if (!(isNumberFinite(input) && isNumberFinite(decimal) && isInteger(decimal) && isPositive(decimal))) {\r\n      return input;\r\n    }\r\n\r\n    let bytes = input;\r\n    let unit = from;\r\n    while (unit !== 'B') {\r\n      bytes *= 1024;\r\n      unit = BytesPipe.formats[unit].prev!;\r\n    }\r\n\r\n    if (to) {\r\n      const format = BytesPipe.formats[to];\r\n\r\n      const result = toDecimal(BytesPipe.calculateResult(format, bytes), decimal);\r\n\r\n      return BytesPipe.formatResult(result, to);\r\n    }\r\n\r\n    for (const key in BytesPipe.formats) {\r\n      if (BytesPipe.formats.hasOwnProperty(key)) {\r\n        const format = BytesPipe.formats[key];\r\n        if (bytes < format.max) {\r\n          const result = toDecimal(BytesPipe.calculateResult(format, bytes), decimal);\r\n\r\n          return BytesPipe.formatResult(result, key);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static formatResult(result: number, unit: string): string {\r\n    return `${result} ${unit}`;\r\n  }\r\n\r\n  static calculateResult(format: { max: number; prev?: ByteUnit }, bytes: number) {\r\n    const prev = format.prev ? BytesPipe.formats[format.prev] : undefined;\r\n    return prev ? bytes / prev.max : bytes;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [BytesPipe],\r\n  exports: [BytesPipe],\r\n})\r\nexport class NgBytesPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { createRound, isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'ceil',\r\n})\r\nexport class CeilPipe implements PipeTransform {\r\n  transform(value: any, precision: any = 0): any {\r\n    if (isString(precision)) {\r\n      precision = parseInt(precision);\r\n    }\r\n\r\n    return createRound('ceil')(value, precision);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CeilPipe],\r\n  exports: [CeilPipe],\r\n})\r\nexport class NgCeilPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { createRound, isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'floor',\r\n})\r\nexport class FloorPipe implements PipeTransform {\r\n  transform(value: any, precision: any = 0): any {\r\n    if (isString(precision)) {\r\n      precision = parseInt(precision);\r\n    }\r\n\r\n    return createRound('floor')(value, precision);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [FloorPipe],\r\n  exports: [FloorPipe],\r\n})\r\nexport class NgFloorPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { createRound, isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'round',\r\n})\r\nexport class RoundPipe implements PipeTransform {\r\n  transform(value: any, precision: any = 0): any {\r\n    if (isString(precision)) {\r\n      precision = parseInt(precision);\r\n    }\r\n\r\n    return createRound('round')(value, precision);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [RoundPipe],\r\n  exports: [RoundPipe],\r\n})\r\nexport class NgRoundPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'degrees',\r\n})\r\nexport class DegreesPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isNumberFinite(input)) {\r\n      return 'NaN';\r\n    }\r\n\r\n    return (input * 180) / Math.PI;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [DegreesPipe],\r\n  exports: [DegreesPipe],\r\n})\r\nexport class NgDegreesPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'radians',\r\n})\r\nexport class RadiansPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isNumberFinite(input)) {\r\n      return 'NaN';\r\n    }\r\n\r\n    return (input * Math.PI) / 180;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [RadiansPipe],\r\n  exports: [RadiansPipe],\r\n})\r\nexport class NgRadiansPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'random',\r\n})\r\nexport class RandomPipe implements PipeTransform {\r\n  transform(input: any, min: number = 0, max: number = 1): any {\r\n    if (!isNumberFinite(min) || !isNumberFinite(max)) {\r\n      return input;\r\n    }\r\n\r\n    if (min > max) {\r\n      max = min;\r\n      min = 0;\r\n    }\r\n\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [RandomPipe],\r\n  exports: [RandomPipe],\r\n})\r\nexport class NgRandomPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'sqrt',\r\n})\r\nexport class SqrtPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isNumberFinite(input)) {\r\n      return 'NaN';\r\n    }\r\n\r\n    return Math.sqrt(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [SqrtPipe],\r\n  exports: [SqrtPipe],\r\n})\r\nexport class NgSqrtPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'pow',\r\n})\r\nexport class PowPipe implements PipeTransform {\r\n  transform(input: any, power: number = 2): any {\r\n    if (!isNumberFinite(input)) {\r\n      return 'NaN';\r\n    }\r\n\r\n    return Math.pow(input, power);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [PowPipe],\r\n  exports: [PowPipe],\r\n})\r\nexport class NgPowPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'abs',\r\n})\r\nexport class AbsPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isNumberFinite(input)) {\r\n      return 'NaN';\r\n    }\r\n\r\n    return Math.abs(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AbsPipe],\r\n  exports: [AbsPipe],\r\n})\r\nexport class NgAbsPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isNumberFinite } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'ordinal',\r\n})\r\nexport class OrdinalPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isNumberFinite(input)) {\r\n      return 'NaN';\r\n    }\r\n\r\n    if (this.endsWithTenth(input)) {\r\n      return input + 'th';\r\n    } else {\r\n      const cardinal = input.toString().charAt(input.toString().length - 1);\r\n\r\n      switch (cardinal) {\r\n        case '1':\r\n          return input + 'st';\r\n        case '2':\r\n          return input + 'nd';\r\n        case '3':\r\n          return input + 'rd';\r\n        default:\r\n          return input + 'th';\r\n      }\r\n    }\r\n  }\r\n\r\n  private endsWithTenth(input: any): boolean {\r\n    const beforeLastDigit = input.toString().charAt(input.toString().length - 2);\r\n\r\n    return beforeLastDigit === '1';\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [OrdinalPipe],\r\n  exports: [OrdinalPipe],\r\n})\r\nexport class NgOrdinalPipeModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgBytesPipeModule } from './bytes.pipe';\r\nimport { NgCeilPipeModule } from './ceil.pipe';\r\nimport { NgFloorPipeModule } from './floor.pipe';\r\nimport { NgRoundPipeModule } from './round.pipe';\r\nimport { NgDegreesPipeModule } from './degrees.pipe';\r\nimport { NgRadiansPipeModule } from './radians.pipe';\r\nimport { NgRandomPipeModule } from './random.pipe';\r\nimport { NgSqrtPipeModule } from './sqrt.pipe';\r\nimport { NgPowPipeModule } from './pow.pipe';\r\nimport { NgAbsPipeModule } from './abs.pipe';\r\nimport { NgOrdinalPipeModule } from './ordinal.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgAbsPipeModule,\r\n    NgBytesPipeModule,\r\n    NgCeilPipeModule,\r\n    NgDegreesPipeModule,\r\n    NgFloorPipeModule,\r\n    NgOrdinalPipeModule,\r\n    NgPowPipeModule,\r\n    NgRadiansPipeModule,\r\n    NgRandomPipeModule,\r\n    NgRoundPipeModule,\r\n    NgSqrtPipeModule,\r\n  ],\r\n})\r\nexport class NgMathPipesModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isObject } from '../utils/utils';\r\n\r\n@Pipe({ name: 'keys' })\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isObject(input)) {\r\n      return input;\r\n    }\r\n\r\n    return Object.keys(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [KeysPipe],\r\n  exports: [KeysPipe],\r\n})\r\nexport class NgKeysPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isObject } from '../utils/utils';\r\n\r\n@Pipe({ name: 'toArray' })\r\nexport class ToArrayPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isObject(input)) {\r\n      return input;\r\n    }\r\n\r\n    return Object.keys(input).map(value => input[value]);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ToArrayPipe],\r\n  exports: [ToArrayPipe],\r\n})\r\nexport class NgToArrayPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isObject, isArray, isNil } from '../utils/utils';\r\n\r\n@Pipe({ name: 'defaults' })\r\nexport class DefaultsPipe implements PipeTransform {\r\n  transform(input: any, defaults: any): any {\r\n    if (!isObject(defaults)) {\r\n      return input;\r\n    }\r\n\r\n    if (isNil(input)) {\r\n      return defaults;\r\n    }\r\n\r\n    if (isArray(input)) {\r\n      return input.map((item: any) => {\r\n        if (isObject(item)) {\r\n          return Object.assign({}, defaults, item);\r\n        }\r\n\r\n        if (isNil(item)) {\r\n          return defaults;\r\n        }\r\n\r\n        return item;\r\n      });\r\n    }\r\n\r\n    if (isObject(input)) {\r\n      return Object.assign({}, defaults, input);\r\n    }\r\n\r\n    return input;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [DefaultsPipe],\r\n  exports: [DefaultsPipe],\r\n})\r\nexport class NgDefaultsPipeModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgKeysPipeModule } from './keys.pipe';\r\nimport { NgToArrayPipeModule } from './to-array.pipe';\r\nimport { NgDefaultsPipeModule } from './defaults.pipe';\r\n\r\n@NgModule({\r\n  imports: [NgKeysPipeModule, NgToArrayPipeModule, NgDefaultsPipeModule],\r\n})\r\nexport class NgObjectPipesModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { leftPad, isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'leftpad',\r\n})\r\nexport class LeftPadPipe implements PipeTransform {\r\n  transform(input: any, length: number = 0, character: string = ' '): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return leftPad(input, length, character);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [LeftPadPipe],\r\n  exports: [LeftPadPipe],\r\n})\r\nexport class NgLeftPadPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'match',\r\n})\r\nexport class MatchPipe implements PipeTransform {\r\n  transform(input: any, pattern: any, flag: any): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    const regexp = pattern instanceof RegExp ? pattern : new RegExp(pattern, flag);\r\n    return input.match(regexp);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [MatchPipe],\r\n  exports: [MatchPipe],\r\n})\r\nexport class NgMatchPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { pad, isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'pad',\r\n})\r\nexport class PadPipe implements PipeTransform {\r\n  transform(input: any, length: number = 0, character: string = ' '): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return pad(input, length, character);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [PadPipe],\r\n  exports: [PadPipe],\r\n})\r\nexport class NgPadPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, isUndefined } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'replace',\r\n})\r\nexport class ReplacePipe implements PipeTransform {\r\n  transform(input: any, pattern: any, replacement: any): any {\r\n    if (!isString(input) || isUndefined(pattern) || isUndefined(replacement)) {\r\n      return input;\r\n    }\r\n\r\n    return input.replace(pattern, replacement);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ReplacePipe],\r\n  exports: [ReplacePipe],\r\n})\r\nexport class NgReplacePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { rightPad, isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'rightpad',\r\n})\r\nexport class RightPadPipe implements PipeTransform {\r\n  transform(input: any, length: number = 0, character: string = ' '): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return rightPad(input, length, character);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [RightPadPipe],\r\n  exports: [RightPadPipe],\r\n})\r\nexport class NgRightPadPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'split',\r\n})\r\nexport class SplitPipe implements PipeTransform {\r\n  transform(input: any, separator: string = ' ', limit?: number): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.split(separator, limit);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [SplitPipe],\r\n  exports: [SplitPipe],\r\n})\r\nexport class NgSplitPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'test',\r\n})\r\nexport class TestPipe implements PipeTransform {\r\n  transform(input: any, pattern: any, flag: any): any {\r\n    if (!isString(input) || !pattern) {\r\n      return input;\r\n    }\r\n\r\n    const regexp = pattern instanceof RegExp ? pattern : new RegExp(pattern, flag);\r\n\r\n    return regexp.test(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TestPipe],\r\n  exports: [TestPipe],\r\n})\r\nexport class NgTestPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'trim',\r\n})\r\nexport class TrimPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.trim();\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TrimPipe],\r\n  exports: [TrimPipe],\r\n})\r\nexport class NgTrimPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'newlines',\r\n})\r\nexport class NewlinesPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [NewlinesPipe],\r\n  exports: [NewlinesPipe],\r\n})\r\nexport class NgNewlinesPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, upperFirst } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'capitalize',\r\n})\r\nexport class CapitalizePipe implements PipeTransform {\r\n  transform(input: any, all: boolean = false): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (!all) {\r\n      return upperFirst(input.toLowerCase());\r\n    } else {\r\n      return input\r\n        .toLowerCase()\r\n        .split(' ')\r\n        .map((value: string) => upperFirst(value))\r\n        .join(' ');\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CapitalizePipe],\r\n  exports: [CapitalizePipe],\r\n})\r\nexport class NgCapitalizePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, upperFirst } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'upperfirst',\r\n})\r\nexport class UpperFirstPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return upperFirst(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [UpperFirstPipe],\r\n  exports: [UpperFirstPipe],\r\n})\r\nexport class NgUpperFirstPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'template',\r\n})\r\nexport class TemplatePipe implements PipeTransform {\r\n  transform(input: any, ...args: any[]): any {\r\n    if (!isString(input) || args.length === 0) {\r\n      return input;\r\n    }\r\n\r\n    let template = input;\r\n    for (let i = 0; i < args.length; ++i) {\r\n      template = template.replace(`$${i + 1}`, args[i]);\r\n    }\r\n\r\n    return template;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TemplatePipe],\r\n  exports: [TemplatePipe],\r\n})\r\nexport class NgTemplatePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'encodeURI',\r\n})\r\nexport class EncodeURIPipe implements PipeTransform {\r\n  transform(input: any) {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return encodeURI(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [EncodeURIPipe],\r\n  exports: [EncodeURIPipe],\r\n})\r\nexport class NgEncodeURIPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'encodeURIComponent',\r\n})\r\nexport class EncodeURIComponentPipe implements PipeTransform {\r\n  transform(input: any) {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return encodeURIComponent(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [EncodeURIComponentPipe],\r\n  exports: [EncodeURIComponentPipe],\r\n})\r\nexport class NgEncodeURIComponentPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'decodeURI',\r\n})\r\nexport class DecodeURIPipe implements PipeTransform {\r\n  transform(input: any) {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return decodeURI(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [DecodeURIPipe],\r\n  exports: [DecodeURIPipe],\r\n})\r\nexport class NgDecodeURIPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'decodeURIComponent',\r\n})\r\nexport class DecodeURIComponentPipe implements PipeTransform {\r\n  transform(input: any) {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return decodeURIComponent(input);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [DecodeURIComponentPipe],\r\n  exports: [DecodeURIComponentPipe],\r\n})\r\nexport class NgDecodeURIComponentPipeModule {}\r\n","// Inspired from https://github.com/a8m/angular-filter/blob/master/src/_filter/string/truncate.js\r\n\r\nimport { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, isUndefined } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'truncate',\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(input: any, length?: number, suffix?: string, preserve?: boolean): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    length = isUndefined(length) ? input.length : length;\r\n\r\n    if (input.length <= length) {\r\n      return input;\r\n    }\r\n\r\n    preserve = preserve || false;\r\n    suffix = suffix || '';\r\n    let index = length;\r\n\r\n    if (preserve) {\r\n      if (input.indexOf(' ', length) === -1) {\r\n        index = input.length;\r\n      } else {\r\n        index = input.indexOf(' ', length);\r\n      }\r\n    }\r\n\r\n    return input.substring(0, index) + suffix;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [TruncatePipe],\r\n  exports: [TruncatePipe],\r\n})\r\nexport class NgTruncatePipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'repeat',\r\n})\r\nexport class RepeatPipe implements PipeTransform {\r\n  transform(input: any, times: number = 1, characters: string = ''): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    if (times <= 0) {\r\n      times = 1;\r\n    }\r\n\r\n    const repeated = [input];\r\n    for (let i = 1; i < times; ++i) {\r\n      repeated.push(input);\r\n    }\r\n\r\n    return repeated.join(characters);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [RepeatPipe],\r\n  exports: [RepeatPipe],\r\n})\r\nexport class NgRepeatPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({ name: 'slugify' })\r\nexport class SlugifyPipe implements PipeTransform {\r\n  transform(input: any): any {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return input\r\n      .toLowerCase()\r\n      .trim()\r\n      .replace(/[^a-z0-9\\s-]/g, ' ')\r\n      .replace(/[\\s-]+/g, '-');\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [SlugifyPipe],\r\n  exports: [SlugifyPipe],\r\n})\r\nexport class NgSlugifyPipeModule {}\r\n","// idea from https://github.com/a8m/angular-filter\r\n\r\nimport { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, isUndefined } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'stripTags',\r\n})\r\nexport class StripTagsPipe implements PipeTransform {\r\n  transform(input: string): any {\r\n    if (!isString(input) || isUndefined(input)) return input;\r\n\r\n    return input.replace(/<\\S[^><]*>/g, '');\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [StripTagsPipe],\r\n  exports: [StripTagsPipe],\r\n})\r\nexport class NgStripTagsPipeModule {}\r\n","// idea from https://github.com/a8m/angular-filter\r\n\r\nimport { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, isUndefined } from '../utils/utils';\r\n\r\n@Pipe({ name: 'latinize' })\r\nexport class LatinizePipe implements PipeTransform {\r\n  transform(input: string): any {\r\n    if (!isString(input) || isUndefined(input)) {\r\n      return input;\r\n    }\r\n\r\n    let replacementList = [\r\n      { base: ' ', chars: '\\u00A0' },\r\n      { base: '0', chars: '\\u07C0' },\r\n      {\r\n        base: 'A',\r\n        chars:\r\n          '\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F',\r\n      },\r\n      { base: 'AA', chars: '\\uA732' },\r\n      { base: 'AE', chars: '\\u00C6\\u01FC\\u01E2' },\r\n      { base: 'AO', chars: '\\uA734' },\r\n      { base: 'AU', chars: '\\uA736' },\r\n      { base: 'AV', chars: '\\uA738\\uA73A' },\r\n      { base: 'AY', chars: '\\uA73C' },\r\n      { base: 'B', chars: '\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181' },\r\n      { base: 'C', chars: '\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B' },\r\n      { base: 'D', chars: '\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779' },\r\n      { base: 'Dh', chars: '\\u00D0' },\r\n      { base: 'DZ', chars: '\\u01F1\\u01C4' },\r\n      { base: 'Dz', chars: '\\u01F2\\u01C5' },\r\n      {\r\n        base: 'E',\r\n        chars:\r\n          '\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07',\r\n      },\r\n      { base: 'F', chars: '\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B' },\r\n      {\r\n        base: 'G',\r\n        chars: '\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262',\r\n      },\r\n      { base: 'H', chars: '\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D' },\r\n      {\r\n        base: 'I',\r\n        chars:\r\n          '\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197',\r\n      },\r\n      { base: 'J', chars: '\\u24BF\\uFF2A\\u0134\\u0248\\u0237' },\r\n      { base: 'K', chars: '\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2' },\r\n      {\r\n        base: 'L',\r\n        chars: '\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780',\r\n      },\r\n      { base: 'LJ', chars: '\\u01C7' },\r\n      { base: 'Lj', chars: '\\u01C8' },\r\n      { base: 'M', chars: '\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB' },\r\n      {\r\n        base: 'N',\r\n        chars: '\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E',\r\n      },\r\n      { base: 'NJ', chars: '\\u01CA' },\r\n      { base: 'Nj', chars: '\\u01CB' },\r\n      {\r\n        base: 'O',\r\n        chars:\r\n          '\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C',\r\n      },\r\n      { base: 'OE', chars: '\\u0152' },\r\n      { base: 'OI', chars: '\\u01A2' },\r\n      { base: 'OO', chars: '\\uA74E' },\r\n      { base: 'OU', chars: '\\u0222' },\r\n      { base: 'P', chars: '\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754' },\r\n      { base: 'Q', chars: '\\u24C6\\uFF31\\uA756\\uA758\\u024A' },\r\n      {\r\n        base: 'R',\r\n        chars: '\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782',\r\n      },\r\n      {\r\n        base: 'S',\r\n        chars: '\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784',\r\n      },\r\n      { base: 'T', chars: '\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786' },\r\n      { base: 'Th', chars: '\\u00DE' },\r\n      { base: 'TZ', chars: '\\uA728' },\r\n      {\r\n        base: 'U',\r\n        chars:\r\n          '\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244',\r\n      },\r\n      { base: 'V', chars: '\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245' },\r\n      { base: 'VY', chars: '\\uA760' },\r\n      { base: 'W', chars: '\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72' },\r\n      { base: 'X', chars: '\\u24CD\\uFF38\\u1E8A\\u1E8C' },\r\n      { base: 'Y', chars: '\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE' },\r\n      { base: 'Z', chars: '\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762' },\r\n      {\r\n        base: 'a',\r\n        chars:\r\n          '\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251',\r\n      },\r\n      { base: 'aa', chars: '\\uA733' },\r\n      { base: 'ae', chars: '\\u00E6\\u01FD\\u01E3' },\r\n      { base: 'ao', chars: '\\uA735' },\r\n      { base: 'au', chars: '\\uA737' },\r\n      { base: 'av', chars: '\\uA739\\uA73B' },\r\n      { base: 'ay', chars: '\\uA73D' },\r\n      { base: 'b', chars: '\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182' },\r\n      { base: 'c', chars: '\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184' },\r\n      {\r\n        base: 'd',\r\n        chars: '\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA',\r\n      },\r\n      { base: 'dh', chars: '\\u00F0' },\r\n      { base: 'dz', chars: '\\u01F3\\u01C6' },\r\n      {\r\n        base: 'e',\r\n        chars:\r\n          '\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD',\r\n      },\r\n      { base: 'f', chars: '\\u24D5\\uFF46\\u1E1F\\u0192' },\r\n      { base: 'ff', chars: '\\uFB00' },\r\n      { base: 'fi', chars: '\\uFB01' },\r\n      { base: 'fl', chars: '\\uFB02' },\r\n      { base: 'ffi', chars: '\\uFB03' },\r\n      { base: 'ffl', chars: '\\uFB04' },\r\n      { base: 'g', chars: '\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79' },\r\n      { base: 'h', chars: '\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265' },\r\n      { base: 'hv', chars: '\\u0195' },\r\n      {\r\n        base: 'i',\r\n        chars:\r\n          '\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131',\r\n      },\r\n      { base: 'j', chars: '\\u24D9\\uFF4A\\u0135\\u01F0\\u0249' },\r\n      { base: 'k', chars: '\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3' },\r\n      {\r\n        base: 'l',\r\n        chars:\r\n          '\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D',\r\n      },\r\n      { base: 'lj', chars: '\\u01C9' },\r\n      { base: 'm', chars: '\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F' },\r\n      {\r\n        base: 'n',\r\n        chars:\r\n          '\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509',\r\n      },\r\n      { base: 'nj', chars: '\\u01CC' },\r\n      {\r\n        base: 'o',\r\n        chars:\r\n          '\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11',\r\n      },\r\n      { base: 'oe', chars: '\\u0153' },\r\n      { base: 'oi', chars: '\\u01A3' },\r\n      { base: 'oo', chars: '\\uA74F' },\r\n      { base: 'ou', chars: '\\u0223' },\r\n      { base: 'p', chars: '\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1' },\r\n      { base: 'q', chars: '\\u24E0\\uFF51\\u024B\\uA757\\uA759' },\r\n      {\r\n        base: 'r',\r\n        chars: '\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783',\r\n      },\r\n      {\r\n        base: 's',\r\n        chars: '\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282',\r\n      },\r\n      { base: 'ss', chars: '\\xDF' },\r\n      {\r\n        base: 't',\r\n        chars: '\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787',\r\n      },\r\n      { base: 'th', chars: '\\u00FE' },\r\n      { base: 'tz', chars: '\\uA729' },\r\n      {\r\n        base: 'u',\r\n        chars:\r\n          '\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289',\r\n      },\r\n      { base: 'v', chars: '\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C' },\r\n      { base: 'vy', chars: '\\uA761' },\r\n      { base: 'w', chars: '\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73' },\r\n      { base: 'x', chars: '\\u24E7\\uFF58\\u1E8B\\u1E8D' },\r\n      { base: 'y', chars: '\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF' },\r\n      { base: 'z', chars: '\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763' },\r\n    ];\r\n\r\n    let diacriticsMap: any = {};\r\n    for (let i = 0; i < replacementList.length; i += 1) {\r\n      let chars = replacementList[i].chars;\r\n      for (let j = 0; j < chars.length; j += 1) {\r\n        diacriticsMap[chars[j]] = replacementList[i].base;\r\n      }\r\n    }\r\n\r\n    return input.replace(/[^\\u0000-\\u007e]/g, c => diacriticsMap[c] || c);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [LatinizePipe],\r\n  exports: [LatinizePipe],\r\n})\r\nexport class NgLatinizePipeModule {}\r\n","// idea from https://github.com/a8m/angular-filter\r\n\r\nimport { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, isUndefined } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'wrap',\r\n})\r\nexport class WrapPipe implements PipeTransform {\r\n  transform(input: string, wrap: string, ends?: string): string {\r\n    return isString(input) && !isUndefined(wrap) ? [wrap, input, ends || wrap].join('') : input;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [WrapPipe],\r\n  exports: [WrapPipe],\r\n})\r\nexport class NgWrapPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString, isNull } from '../utils/utils';\r\n\r\n@Pipe({ name: 'with' })\r\nexport class WithPipe implements PipeTransform {\r\n  transform(input: string, start: string | null = null, ends: string | null = null, csensitive: boolean = false): any {\r\n    if (!isString(input) || (isNull(start) && isNull(ends)) || start == '' || ends == '') {\r\n      return input;\r\n    }\r\n\r\n    input = csensitive ? input : input.toLowerCase();\r\n\r\n    if (!isNull(start) && !isNull(ends)) {\r\n      let a: boolean = !input.indexOf(csensitive ? start : start.toLowerCase());\r\n      let b: boolean = input.indexOf(csensitive ? ends : ends.toLowerCase(), input.length - ends.length) !== -1;\r\n\r\n      if (a == true && b == true) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!isNull(start)) {\r\n      return !input.indexOf(csensitive ? start : start.toLowerCase());\r\n    }\r\n\r\n    if (!isNull(ends)) {\r\n      let position: any = input.length - ends.length;\r\n\r\n      return input.indexOf(csensitive ? ends : ends.toLowerCase(), position) !== -1;\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [WithPipe],\r\n  exports: [WithPipe],\r\n})\r\nexport class NgWithPipeModule {}\r\n","import { Pipe, PipeTransform, NgModule } from '@angular/core';\r\nimport { isString } from '../utils/utils';\r\n\r\n@Pipe({\r\n  name: 'reverseStr',\r\n})\r\nexport class ReverseStrPipe implements PipeTransform {\r\n  transform(input: string): string {\r\n    if (!isString(input)) {\r\n      return input;\r\n    }\r\n\r\n    return Array.from(input)\r\n      .reverse()\r\n      .join('');\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ReverseStrPipe],\r\n  exports: [ReverseStrPipe],\r\n})\r\nexport class NgReverseStrPipeModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgLeftPadPipeModule } from './left-pad.pipe';\r\nimport { NgMatchPipeModule } from './match.pipe';\r\nimport { NgPadPipeModule } from './pad.pipe';\r\nimport { NgReplacePipeModule } from './replace.pipe';\r\nimport { NgRightPadPipeModule } from './right-pad.pipe';\r\nimport { NgSplitPipeModule } from './split.pipe';\r\nimport { NgTestPipeModule } from './test.pipe';\r\nimport { NgTrimPipeModule } from './trim.pipe';\r\nimport { NgNewlinesPipeModule } from './newlines.pipe';\r\nimport { NgCapitalizePipeModule } from './capitalize.pipe';\r\nimport { NgUpperFirstPipeModule } from './upperfirst.pipe';\r\nimport { NgTemplatePipeModule } from './template.pipe';\r\nimport { NgEncodeURIPipeModule } from './encode-uri.pipe';\r\nimport { NgEncodeURIComponentPipeModule } from './encode-uri-component.pipe';\r\nimport { NgDecodeURIPipeModule } from './decode-uri.pipe';\r\nimport { NgDecodeURIComponentPipeModule } from './decode-uri-component.pipe';\r\nimport { NgTruncatePipeModule } from './truncate.pipe';\r\nimport { NgRepeatPipeModule } from './repeat.pipe';\r\nimport { NgSlugifyPipeModule } from './slugify.pipe';\r\nimport { NgStripTagsPipeModule } from './strip-tags.pipe';\r\nimport { NgLatinizePipeModule } from './latinize.pipe';\r\nimport { NgWrapPipeModule } from './wrap.pipe';\r\nimport { NgWithPipeModule } from './with.pipe';\r\nimport { NgReverseStrPipeModule } from './reverse-str.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgCapitalizePipeModule,\r\n    NgDecodeURIComponentPipeModule,\r\n    NgDecodeURIPipeModule,\r\n    NgEncodeURIComponentPipeModule,\r\n    NgLeftPadPipeModule,\r\n    NgMatchPipeModule,\r\n    NgPadPipeModule,\r\n    NgReplacePipeModule,\r\n    NgRightPadPipeModule,\r\n    NgSplitPipeModule,\r\n    NgTestPipeModule,\r\n    NgTrimPipeModule,\r\n    NgNewlinesPipeModule,\r\n    NgUpperFirstPipeModule,\r\n    NgTemplatePipeModule,\r\n    NgEncodeURIPipeModule,\r\n    NgTruncatePipeModule,\r\n    NgRepeatPipeModule,\r\n    NgSlugifyPipeModule,\r\n    NgStripTagsPipeModule,\r\n    NgLatinizePipeModule,\r\n    NgWrapPipeModule,\r\n    NgWithPipeModule,\r\n    NgReverseStrPipeModule,\r\n  ],\r\n})\r\nexport class NgStringPipesModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgAggregatePipesModule } from './aggregate/aggregate.module';\r\nimport { NgArrayPipesModule } from './array/array.module';\r\nimport { NgBooleanPipesModule } from './boolean/boolean.module';\r\nimport { NgMathPipesModule } from './math/math.module';\r\nimport { NgObjectPipesModule } from './object/object.module';\r\nimport { NgStringPipesModule } from './string/string.module';\r\n\r\n@NgModule({\r\n  exports: [\r\n    NgArrayPipesModule,\r\n    NgMathPipesModule,\r\n    NgBooleanPipesModule,\r\n    NgStringPipesModule,\r\n    NgObjectPipesModule,\r\n    NgAggregatePipesModule,\r\n  ],\r\n})\r\nexport class NgPipesModule {}\r\n"],"names":[],"mappings":"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"}
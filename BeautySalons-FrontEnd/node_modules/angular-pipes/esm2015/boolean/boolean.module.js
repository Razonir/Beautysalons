import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { NgIsEqualPipeModule } from './is-equal.pipe';
import { NgIsGreaterOrEqualPipeModule } from './is-greater-or-equal.pipe';
import { NgIsGreaterPipeModule } from './is-greater.pipe';
import { NgIsIdenticalPipeModule } from './is-identical.pipe';
import { NgIsLessOrEqualPipeModule } from './is-less-or-equal.pipe';
import { NgIsLessPipeModule } from './is-less.pipe';
import { NgIsNotEqualPipeModule } from './is-not-equal.pipe';
import { NgIsNotIdenticalPipeModule } from './is-not-identical.pipe';
import { NgIsNullPipeModule } from './is-null.pipe';
import { NgIsUndefinedPipeModule } from './is-undefined.pipe';
import { NgIsNilPipeModule } from './is-nil.pipe';
import { NgIsFunctionPipeModule } from './is-function.pipe';
import { NgIsNumberPipeModule } from './is-number.pipe';
import { NgIsStringPipeModule } from './is-string.pipe';
import { NgIsArrayPipeModule } from './is-array.pipe';
import { NgIsObjectPipeModule } from './is-object.pipe';
import { NgIsDefinedPipeModule } from './is-defined.pipe';
let NgTypesPipesModule = class NgTypesPipesModule {
};
NgTypesPipesModule = tslib_1.__decorate([
    NgModule({
        imports: [
            NgIsNullPipeModule,
            NgIsUndefinedPipeModule,
            NgIsNilPipeModule,
            NgIsFunctionPipeModule,
            NgIsNumberPipeModule,
            NgIsStringPipeModule,
            NgIsArrayPipeModule,
            NgIsObjectPipeModule,
            NgIsDefinedPipeModule,
        ],
    })
], NgTypesPipesModule);
export { NgTypesPipesModule };
let NgConditionsPipesModule = class NgConditionsPipesModule {
};
NgConditionsPipesModule = tslib_1.__decorate([
    NgModule({
        imports: [
            NgIsEqualPipeModule,
            NgIsGreaterOrEqualPipeModule,
            NgIsGreaterPipeModule,
            NgIsIdenticalPipeModule,
            NgIsLessOrEqualPipeModule,
            NgIsLessPipeModule,
            NgIsNotEqualPipeModule,
            NgIsNotIdenticalPipeModule,
        ],
    })
], NgConditionsPipesModule);
export { NgConditionsPipesModule };
let NgBooleanPipesModule = class NgBooleanPipesModule {
};
NgBooleanPipesModule = tslib_1.__decorate([
    NgModule({
        imports: [NgConditionsPipesModule, NgTypesPipesModule],
    })
], NgBooleanPipesModule);
export { NgBooleanPipesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vbGVhbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXBpcGVzLyIsInNvdXJjZXMiOlsiYm9vbGVhbi9ib29sZWFuLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMxRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFlMUQsSUFBYSxrQkFBa0IsR0FBL0IsTUFBYSxrQkFBa0I7Q0FBRyxDQUFBO0FBQXJCLGtCQUFrQjtJQWI5QixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCxrQkFBa0I7WUFDbEIsdUJBQXVCO1lBQ3ZCLGlCQUFpQjtZQUNqQixzQkFBc0I7WUFDdEIsb0JBQW9CO1lBQ3BCLG9CQUFvQjtZQUNwQixtQkFBbUI7WUFDbkIsb0JBQW9CO1lBQ3BCLHFCQUFxQjtTQUN0QjtLQUNGLENBQUM7R0FDVyxrQkFBa0IsQ0FBRztTQUFyQixrQkFBa0I7QUFjL0IsSUFBYSx1QkFBdUIsR0FBcEMsTUFBYSx1QkFBdUI7Q0FBRyxDQUFBO0FBQTFCLHVCQUF1QjtJQVpuQyxRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCxtQkFBbUI7WUFDbkIsNEJBQTRCO1lBQzVCLHFCQUFxQjtZQUNyQix1QkFBdUI7WUFDdkIseUJBQXlCO1lBQ3pCLGtCQUFrQjtZQUNsQixzQkFBc0I7WUFDdEIsMEJBQTBCO1NBQzNCO0tBQ0YsQ0FBQztHQUNXLHVCQUF1QixDQUFHO1NBQTFCLHVCQUF1QjtBQUtwQyxJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtDQUFHLENBQUE7QUFBdkIsb0JBQW9CO0lBSGhDLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRSxDQUFDLHVCQUF1QixFQUFFLGtCQUFrQixDQUFDO0tBQ3ZELENBQUM7R0FDVyxvQkFBb0IsQ0FBRztTQUF2QixvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgTmdJc0VxdWFsUGlwZU1vZHVsZSB9IGZyb20gJy4vaXMtZXF1YWwucGlwZSc7XHJcbmltcG9ydCB7IE5nSXNHcmVhdGVyT3JFcXVhbFBpcGVNb2R1bGUgfSBmcm9tICcuL2lzLWdyZWF0ZXItb3ItZXF1YWwucGlwZSc7XHJcbmltcG9ydCB7IE5nSXNHcmVhdGVyUGlwZU1vZHVsZSB9IGZyb20gJy4vaXMtZ3JlYXRlci5waXBlJztcclxuaW1wb3J0IHsgTmdJc0lkZW50aWNhbFBpcGVNb2R1bGUgfSBmcm9tICcuL2lzLWlkZW50aWNhbC5waXBlJztcclxuaW1wb3J0IHsgTmdJc0xlc3NPckVxdWFsUGlwZU1vZHVsZSB9IGZyb20gJy4vaXMtbGVzcy1vci1lcXVhbC5waXBlJztcclxuaW1wb3J0IHsgTmdJc0xlc3NQaXBlTW9kdWxlIH0gZnJvbSAnLi9pcy1sZXNzLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0lzTm90RXF1YWxQaXBlTW9kdWxlIH0gZnJvbSAnLi9pcy1ub3QtZXF1YWwucGlwZSc7XHJcbmltcG9ydCB7IE5nSXNOb3RJZGVudGljYWxQaXBlTW9kdWxlIH0gZnJvbSAnLi9pcy1ub3QtaWRlbnRpY2FsLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0lzTnVsbFBpcGVNb2R1bGUgfSBmcm9tICcuL2lzLW51bGwucGlwZSc7XHJcbmltcG9ydCB7IE5nSXNVbmRlZmluZWRQaXBlTW9kdWxlIH0gZnJvbSAnLi9pcy11bmRlZmluZWQucGlwZSc7XHJcbmltcG9ydCB7IE5nSXNOaWxQaXBlTW9kdWxlIH0gZnJvbSAnLi9pcy1uaWwucGlwZSc7XHJcbmltcG9ydCB7IE5nSXNGdW5jdGlvblBpcGVNb2R1bGUgfSBmcm9tICcuL2lzLWZ1bmN0aW9uLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0lzTnVtYmVyUGlwZU1vZHVsZSB9IGZyb20gJy4vaXMtbnVtYmVyLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0lzU3RyaW5nUGlwZU1vZHVsZSB9IGZyb20gJy4vaXMtc3RyaW5nLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0lzQXJyYXlQaXBlTW9kdWxlIH0gZnJvbSAnLi9pcy1hcnJheS5waXBlJztcclxuaW1wb3J0IHsgTmdJc09iamVjdFBpcGVNb2R1bGUgfSBmcm9tICcuL2lzLW9iamVjdC5waXBlJztcclxuaW1wb3J0IHsgTmdJc0RlZmluZWRQaXBlTW9kdWxlIH0gZnJvbSAnLi9pcy1kZWZpbmVkLnBpcGUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBOZ0lzTnVsbFBpcGVNb2R1bGUsXHJcbiAgICBOZ0lzVW5kZWZpbmVkUGlwZU1vZHVsZSxcclxuICAgIE5nSXNOaWxQaXBlTW9kdWxlLFxyXG4gICAgTmdJc0Z1bmN0aW9uUGlwZU1vZHVsZSxcclxuICAgIE5nSXNOdW1iZXJQaXBlTW9kdWxlLFxyXG4gICAgTmdJc1N0cmluZ1BpcGVNb2R1bGUsXHJcbiAgICBOZ0lzQXJyYXlQaXBlTW9kdWxlLFxyXG4gICAgTmdJc09iamVjdFBpcGVNb2R1bGUsXHJcbiAgICBOZ0lzRGVmaW5lZFBpcGVNb2R1bGUsXHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nVHlwZXNQaXBlc01vZHVsZSB7fVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBOZ0lzRXF1YWxQaXBlTW9kdWxlLFxyXG4gICAgTmdJc0dyZWF0ZXJPckVxdWFsUGlwZU1vZHVsZSxcclxuICAgIE5nSXNHcmVhdGVyUGlwZU1vZHVsZSxcclxuICAgIE5nSXNJZGVudGljYWxQaXBlTW9kdWxlLFxyXG4gICAgTmdJc0xlc3NPckVxdWFsUGlwZU1vZHVsZSxcclxuICAgIE5nSXNMZXNzUGlwZU1vZHVsZSxcclxuICAgIE5nSXNOb3RFcXVhbFBpcGVNb2R1bGUsXHJcbiAgICBOZ0lzTm90SWRlbnRpY2FsUGlwZU1vZHVsZSxcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdDb25kaXRpb25zUGlwZXNNb2R1bGUge31cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW05nQ29uZGl0aW9uc1BpcGVzTW9kdWxlLCBOZ1R5cGVzUGlwZXNNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdCb29sZWFuUGlwZXNNb2R1bGUge31cclxuIl19
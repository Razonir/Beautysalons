import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { NgEmptyPipeModule } from './empty.pipe';
import { NgHeadPipeModule } from './head.pipe';
import { NgInitialPipeModule } from './initial.pipe';
import { NgLastPipeModule } from './last.pipe';
import { NgJoinPipeModule } from './join.pipe';
import { NgTailPipeModule } from './tail.pipe';
import { NgUniqPipeModule } from './uniq.pipe';
import { NgWithoutPipeModule } from './without.pipe';
import { NgMapPipeModule } from './map.pipe';
import { NgWherePipeModule } from './where.pipe';
import { NgFirstOrDefaultPipeModule } from './first-or-default.pipe';
import { NgRangePipeModule } from './range.pipe';
import { NgPluckPipeModule } from './pluck.pipe';
import { NgReversePipeModule } from './reverse.pipe';
import { NgOrderByPipeModule } from './order-by.pipe';
import { NgCountPipeModule } from './count.pipe';
import { NgSomePipeModule } from './some.pipe';
import { NgEveryPipeModule } from './every.pipe';
import { NgShufflePipeModule } from './shuffle.pipe';
import { NgTakePipeModule } from './take.pipe';
import { NgDropPipeModule } from './drop.pipe';
import { NgDeepPipeModule } from './deep.pipe';
import { NgChunkPipeModule } from './chunk.pipe';
import { NgFlattenPipeModule } from './flatten.pipe';
import { NgIntersectionPipeModule } from './intersection.pipe';
import { NgUnionPipeModule } from './union.pipe';
import { NgTakeWhilePipeModule } from './take-while.pipe';
import { NgTakeUntilPipeModule } from './take-until.pipe';
let NgArrayPipesModule = class NgArrayPipesModule {
};
NgArrayPipesModule = tslib_1.__decorate([
    NgModule({
        imports: [
            NgChunkPipeModule,
            NgCountPipeModule,
            NgDeepPipeModule,
            NgDropPipeModule,
            NgEmptyPipeModule,
            NgEveryPipeModule,
            NgFirstOrDefaultPipeModule,
            NgFlattenPipeModule,
            NgHeadPipeModule,
            NgInitialPipeModule,
            NgIntersectionPipeModule,
            NgJoinPipeModule,
            NgLastPipeModule,
            NgMapPipeModule,
            NgOrderByPipeModule,
            NgPluckPipeModule,
            NgRangePipeModule,
            NgReversePipeModule,
            NgShufflePipeModule,
            NgSomePipeModule,
            NgTailPipeModule,
            NgTakeUntilPipeModule,
            NgTakeWhilePipeModule,
            NgTakePipeModule,
            NgUnionPipeModule,
            NgUniqPipeModule,
            NgWherePipeModule,
            NgWithoutPipeModule,
        ],
    })
], NgArrayPipesModule);
export { NgArrayPipesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1waXBlcy8iLCJzb3VyY2VzIjpbImFycmF5L2FycmF5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDMUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFrQzFELElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0NBQUcsQ0FBQTtBQUFyQixrQkFBa0I7SUFoQzlCLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRTtZQUNQLGlCQUFpQjtZQUNqQixpQkFBaUI7WUFDakIsZ0JBQWdCO1lBQ2hCLGdCQUFnQjtZQUNoQixpQkFBaUI7WUFDakIsaUJBQWlCO1lBQ2pCLDBCQUEwQjtZQUMxQixtQkFBbUI7WUFDbkIsZ0JBQWdCO1lBQ2hCLG1CQUFtQjtZQUNuQix3QkFBd0I7WUFDeEIsZ0JBQWdCO1lBQ2hCLGdCQUFnQjtZQUNoQixlQUFlO1lBQ2YsbUJBQW1CO1lBQ25CLGlCQUFpQjtZQUNqQixpQkFBaUI7WUFDakIsbUJBQW1CO1lBQ25CLG1CQUFtQjtZQUNuQixnQkFBZ0I7WUFDaEIsZ0JBQWdCO1lBQ2hCLHFCQUFxQjtZQUNyQixxQkFBcUI7WUFDckIsZ0JBQWdCO1lBQ2hCLGlCQUFpQjtZQUNqQixnQkFBZ0I7WUFDaEIsaUJBQWlCO1lBQ2pCLG1CQUFtQjtTQUNwQjtLQUNGLENBQUM7R0FDVyxrQkFBa0IsQ0FBRztTQUFyQixrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgTmdFbXB0eVBpcGVNb2R1bGUgfSBmcm9tICcuL2VtcHR5LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0hlYWRQaXBlTW9kdWxlIH0gZnJvbSAnLi9oZWFkLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0luaXRpYWxQaXBlTW9kdWxlIH0gZnJvbSAnLi9pbml0aWFsLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0xhc3RQaXBlTW9kdWxlIH0gZnJvbSAnLi9sYXN0LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0pvaW5QaXBlTW9kdWxlIH0gZnJvbSAnLi9qb2luLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1RhaWxQaXBlTW9kdWxlIH0gZnJvbSAnLi90YWlsLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1VuaXFQaXBlTW9kdWxlIH0gZnJvbSAnLi91bmlxLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1dpdGhvdXRQaXBlTW9kdWxlIH0gZnJvbSAnLi93aXRob3V0LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ01hcFBpcGVNb2R1bGUgfSBmcm9tICcuL21hcC5waXBlJztcclxuaW1wb3J0IHsgTmdXaGVyZVBpcGVNb2R1bGUgfSBmcm9tICcuL3doZXJlLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0ZpcnN0T3JEZWZhdWx0UGlwZU1vZHVsZSB9IGZyb20gJy4vZmlyc3Qtb3ItZGVmYXVsdC5waXBlJztcclxuaW1wb3J0IHsgTmdSYW5nZVBpcGVNb2R1bGUgfSBmcm9tICcuL3JhbmdlLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1BsdWNrUGlwZU1vZHVsZSB9IGZyb20gJy4vcGx1Y2sucGlwZSc7XHJcbmltcG9ydCB7IE5nUmV2ZXJzZVBpcGVNb2R1bGUgfSBmcm9tICcuL3JldmVyc2UucGlwZSc7XHJcbmltcG9ydCB7IE5nT3JkZXJCeVBpcGVNb2R1bGUgfSBmcm9tICcuL29yZGVyLWJ5LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0NvdW50UGlwZU1vZHVsZSB9IGZyb20gJy4vY291bnQucGlwZSc7XHJcbmltcG9ydCB7IE5nU29tZVBpcGVNb2R1bGUgfSBmcm9tICcuL3NvbWUucGlwZSc7XHJcbmltcG9ydCB7IE5nRXZlcnlQaXBlTW9kdWxlIH0gZnJvbSAnLi9ldmVyeS5waXBlJztcclxuaW1wb3J0IHsgTmdTaHVmZmxlUGlwZU1vZHVsZSB9IGZyb20gJy4vc2h1ZmZsZS5waXBlJztcclxuaW1wb3J0IHsgTmdUYWtlUGlwZU1vZHVsZSB9IGZyb20gJy4vdGFrZS5waXBlJztcclxuaW1wb3J0IHsgTmdEcm9wUGlwZU1vZHVsZSB9IGZyb20gJy4vZHJvcC5waXBlJztcclxuaW1wb3J0IHsgTmdEZWVwUGlwZU1vZHVsZSB9IGZyb20gJy4vZGVlcC5waXBlJztcclxuaW1wb3J0IHsgTmdDaHVua1BpcGVNb2R1bGUgfSBmcm9tICcuL2NodW5rLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0ZsYXR0ZW5QaXBlTW9kdWxlIH0gZnJvbSAnLi9mbGF0dGVuLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0ludGVyc2VjdGlvblBpcGVNb2R1bGUgfSBmcm9tICcuL2ludGVyc2VjdGlvbi5waXBlJztcclxuaW1wb3J0IHsgTmdVbmlvblBpcGVNb2R1bGUgfSBmcm9tICcuL3VuaW9uLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1Rha2VXaGlsZVBpcGVNb2R1bGUgfSBmcm9tICcuL3Rha2Utd2hpbGUucGlwZSc7XHJcbmltcG9ydCB7IE5nVGFrZVVudGlsUGlwZU1vZHVsZSB9IGZyb20gJy4vdGFrZS11bnRpbC5waXBlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgTmdDaHVua1BpcGVNb2R1bGUsXHJcbiAgICBOZ0NvdW50UGlwZU1vZHVsZSxcclxuICAgIE5nRGVlcFBpcGVNb2R1bGUsXHJcbiAgICBOZ0Ryb3BQaXBlTW9kdWxlLFxyXG4gICAgTmdFbXB0eVBpcGVNb2R1bGUsXHJcbiAgICBOZ0V2ZXJ5UGlwZU1vZHVsZSxcclxuICAgIE5nRmlyc3RPckRlZmF1bHRQaXBlTW9kdWxlLFxyXG4gICAgTmdGbGF0dGVuUGlwZU1vZHVsZSxcclxuICAgIE5nSGVhZFBpcGVNb2R1bGUsXHJcbiAgICBOZ0luaXRpYWxQaXBlTW9kdWxlLFxyXG4gICAgTmdJbnRlcnNlY3Rpb25QaXBlTW9kdWxlLFxyXG4gICAgTmdKb2luUGlwZU1vZHVsZSxcclxuICAgIE5nTGFzdFBpcGVNb2R1bGUsXHJcbiAgICBOZ01hcFBpcGVNb2R1bGUsXHJcbiAgICBOZ09yZGVyQnlQaXBlTW9kdWxlLFxyXG4gICAgTmdQbHVja1BpcGVNb2R1bGUsXHJcbiAgICBOZ1JhbmdlUGlwZU1vZHVsZSxcclxuICAgIE5nUmV2ZXJzZVBpcGVNb2R1bGUsXHJcbiAgICBOZ1NodWZmbGVQaXBlTW9kdWxlLFxyXG4gICAgTmdTb21lUGlwZU1vZHVsZSxcclxuICAgIE5nVGFpbFBpcGVNb2R1bGUsXHJcbiAgICBOZ1Rha2VVbnRpbFBpcGVNb2R1bGUsXHJcbiAgICBOZ1Rha2VXaGlsZVBpcGVNb2R1bGUsXHJcbiAgICBOZ1Rha2VQaXBlTW9kdWxlLFxyXG4gICAgTmdVbmlvblBpcGVNb2R1bGUsXHJcbiAgICBOZ1VuaXFQaXBlTW9kdWxlLFxyXG4gICAgTmdXaGVyZVBpcGVNb2R1bGUsXHJcbiAgICBOZ1dpdGhvdXRQaXBlTW9kdWxlLFxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ0FycmF5UGlwZXNNb2R1bGUge31cclxuIl19
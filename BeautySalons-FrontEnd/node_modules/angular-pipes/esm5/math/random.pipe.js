import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isNumberFinite } from '../utils/utils';
var RandomPipe = /** @class */ (function () {
    function RandomPipe() {
    }
    RandomPipe.prototype.transform = function (input, min, max) {
        if (min === void 0) { min = 0; }
        if (max === void 0) { max = 1; }
        if (!isNumberFinite(min) || !isNumberFinite(max)) {
            return input;
        }
        if (min > max) {
            max = min;
            min = 0;
        }
        return Math.random() * (max - min) + min;
    };
    RandomPipe = tslib_1.__decorate([
        Pipe({
            name: 'random',
        })
    ], RandomPipe);
    return RandomPipe;
}());
export { RandomPipe };
var NgRandomPipeModule = /** @class */ (function () {
    function NgRandomPipeModule() {
    }
    NgRandomPipeModule = tslib_1.__decorate([
        NgModule({
            declarations: [RandomPipe],
            exports: [RandomPipe],
        })
    ], NgRandomPipeModule);
    return NgRandomPipeModule;
}());
export { NgRandomPipeModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZG9tLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXBpcGVzLyIsInNvdXJjZXMiOlsibWF0aC9yYW5kb20ucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUtoRDtJQUFBO0lBYUEsQ0FBQztJQVpDLDhCQUFTLEdBQVQsVUFBVSxLQUFVLEVBQUUsR0FBZSxFQUFFLEdBQWU7UUFBaEMsb0JBQUEsRUFBQSxPQUFlO1FBQUUsb0JBQUEsRUFBQSxPQUFlO1FBQ3BELElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDaEQsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRTtZQUNiLEdBQUcsR0FBRyxHQUFHLENBQUM7WUFDVixHQUFHLEdBQUcsQ0FBQyxDQUFDO1NBQ1Q7UUFFRCxPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDM0MsQ0FBQztJQVpVLFVBQVU7UUFIdEIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFFBQVE7U0FDZixDQUFDO09BQ1csVUFBVSxDQWF0QjtJQUFELGlCQUFDO0NBQUEsQUFiRCxJQWFDO1NBYlksVUFBVTtBQW1CdkI7SUFBQTtJQUFpQyxDQUFDO0lBQXJCLGtCQUFrQjtRQUo5QixRQUFRLENBQUM7WUFDUixZQUFZLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDMUIsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDO1NBQ3RCLENBQUM7T0FDVyxrQkFBa0IsQ0FBRztJQUFELHlCQUFDO0NBQUEsQUFBbEMsSUFBa0M7U0FBckIsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNOdW1iZXJGaW5pdGUgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ3JhbmRvbScsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSYW5kb21QaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIG1pbjogbnVtYmVyID0gMCwgbWF4OiBudW1iZXIgPSAxKTogYW55IHtcclxuICAgIGlmICghaXNOdW1iZXJGaW5pdGUobWluKSB8fCAhaXNOdW1iZXJGaW5pdGUobWF4KSkge1xyXG4gICAgICByZXR1cm4gaW5wdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG1pbiA+IG1heCkge1xyXG4gICAgICBtYXggPSBtaW47XHJcbiAgICAgIG1pbiA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbjtcclxuICB9XHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbUmFuZG9tUGlwZV0sXHJcbiAgZXhwb3J0czogW1JhbmRvbVBpcGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdSYW5kb21QaXBlTW9kdWxlIHt9XHJcbiJdfQ==
// idea from https://github.com/a8m/angular-filter
import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString, isUndefined } from '../utils/utils';
var StripTagsPipe = /** @class */ (function () {
    function StripTagsPipe() {
    }
    StripTagsPipe.prototype.transform = function (input) {
        if (!isString(input) || isUndefined(input))
            return input;
        return input.replace(/<\S[^><]*>/g, '');
    };
    StripTagsPipe = tslib_1.__decorate([
        Pipe({
            name: 'stripTags',
        })
    ], StripTagsPipe);
    return StripTagsPipe;
}());
export { StripTagsPipe };
var NgStripTagsPipeModule = /** @class */ (function () {
    function NgStripTagsPipeModule() {
    }
    NgStripTagsPipeModule = tslib_1.__decorate([
        NgModule({
            declarations: [StripTagsPipe],
            exports: [StripTagsPipe],
        })
    ], NgStripTagsPipeModule);
    return NgStripTagsPipeModule;
}());
export { NgStripTagsPipeModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaXAtdGFncy5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1waXBlcy8iLCJzb3VyY2VzIjpbInN0cmluZy9zdHJpcC10YWdzLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0RBQWtEOztBQUVsRCxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUt2RDtJQUFBO0lBTUEsQ0FBQztJQUxDLGlDQUFTLEdBQVQsVUFBVSxLQUFhO1FBQ3JCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQztZQUFFLE9BQU8sS0FBSyxDQUFDO1FBRXpELE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUxVLGFBQWE7UUFIekIsSUFBSSxDQUFDO1lBQ0osSUFBSSxFQUFFLFdBQVc7U0FDbEIsQ0FBQztPQUNXLGFBQWEsQ0FNekI7SUFBRCxvQkFBQztDQUFBLEFBTkQsSUFNQztTQU5ZLGFBQWE7QUFZMUI7SUFBQTtJQUFvQyxDQUFDO0lBQXhCLHFCQUFxQjtRQUpqQyxRQUFRLENBQUM7WUFDUixZQUFZLEVBQUUsQ0FBQyxhQUFhLENBQUM7WUFDN0IsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDO1NBQ3pCLENBQUM7T0FDVyxxQkFBcUIsQ0FBRztJQUFELDRCQUFDO0NBQUEsQUFBckMsSUFBcUM7U0FBeEIscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaWRlYSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hOG0vYW5ndWxhci1maWx0ZXJcclxuXHJcbmltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0sIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGlzU3RyaW5nLCBpc1VuZGVmaW5lZCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnc3RyaXBUYWdzJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIFN0cmlwVGFnc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0oaW5wdXQ6IHN0cmluZyk6IGFueSB7XHJcbiAgICBpZiAoIWlzU3RyaW5nKGlucHV0KSB8fCBpc1VuZGVmaW5lZChpbnB1dCkpIHJldHVybiBpbnB1dDtcclxuXHJcbiAgICByZXR1cm4gaW5wdXQucmVwbGFjZSgvPFxcU1tePjxdKj4vZywgJycpO1xyXG4gIH1cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtTdHJpcFRhZ3NQaXBlXSxcclxuICBleHBvcnRzOiBbU3RyaXBUYWdzUGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ1N0cmlwVGFnc1BpcGVNb2R1bGUge31cclxuIl19
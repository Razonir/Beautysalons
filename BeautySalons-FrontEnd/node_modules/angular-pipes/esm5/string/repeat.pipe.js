import * as tslib_1 from "tslib";
import { Pipe, NgModule } from '@angular/core';
import { isString } from '../utils/utils';
var RepeatPipe = /** @class */ (function () {
    function RepeatPipe() {
    }
    RepeatPipe.prototype.transform = function (input, times, characters) {
        if (times === void 0) { times = 1; }
        if (characters === void 0) { characters = ''; }
        if (!isString(input)) {
            return input;
        }
        if (times <= 0) {
            times = 1;
        }
        var repeated = [input];
        for (var i = 1; i < times; ++i) {
            repeated.push(input);
        }
        return repeated.join(characters);
    };
    RepeatPipe = tslib_1.__decorate([
        Pipe({
            name: 'repeat',
        })
    ], RepeatPipe);
    return RepeatPipe;
}());
export { RepeatPipe };
var NgRepeatPipeModule = /** @class */ (function () {
    function NgRepeatPipeModule() {
    }
    NgRepeatPipeModule = tslib_1.__decorate([
        NgModule({
            declarations: [RepeatPipe],
            exports: [RepeatPipe],
        })
    ], NgRepeatPipeModule);
    return NgRepeatPipeModule;
}());
export { NgRepeatPipeModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwZWF0LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXBpcGVzLyIsInNvdXJjZXMiOlsic3RyaW5nL3JlcGVhdC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBSzFDO0lBQUE7SUFpQkEsQ0FBQztJQWhCQyw4QkFBUyxHQUFULFVBQVUsS0FBVSxFQUFFLEtBQWlCLEVBQUUsVUFBdUI7UUFBMUMsc0JBQUEsRUFBQSxTQUFpQjtRQUFFLDJCQUFBLEVBQUEsZUFBdUI7UUFDOUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNwQixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsSUFBSSxLQUFLLElBQUksQ0FBQyxFQUFFO1lBQ2QsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUNYO1FBRUQsSUFBTSxRQUFRLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBQzlCLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDdEI7UUFFRCxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQWhCVSxVQUFVO1FBSHRCLElBQUksQ0FBQztZQUNKLElBQUksRUFBRSxRQUFRO1NBQ2YsQ0FBQztPQUNXLFVBQVUsQ0FpQnRCO0lBQUQsaUJBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQWpCWSxVQUFVO0FBdUJ2QjtJQUFBO0lBQWlDLENBQUM7SUFBckIsa0JBQWtCO1FBSjlCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUMxQixPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUM7U0FDdEIsQ0FBQztPQUNXLGtCQUFrQixDQUFHO0lBQUQseUJBQUM7Q0FBQSxBQUFsQyxJQUFrQztTQUFyQixrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAncmVwZWF0JyxcclxufSlcclxuZXhwb3J0IGNsYXNzIFJlcGVhdFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueSwgdGltZXM6IG51bWJlciA9IDEsIGNoYXJhY3RlcnM6IHN0cmluZyA9ICcnKTogYW55IHtcclxuICAgIGlmICghaXNTdHJpbmcoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGltZXMgPD0gMCkge1xyXG4gICAgICB0aW1lcyA9IDE7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcmVwZWF0ZWQgPSBbaW5wdXRdO1xyXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCB0aW1lczsgKytpKSB7XHJcbiAgICAgIHJlcGVhdGVkLnB1c2goaW5wdXQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXBlYXRlZC5qb2luKGNoYXJhY3RlcnMpO1xyXG4gIH1cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtSZXBlYXRQaXBlXSxcclxuICBleHBvcnRzOiBbUmVwZWF0UGlwZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ1JlcGVhdFBpcGVNb2R1bGUge31cclxuIl19
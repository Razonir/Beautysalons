import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { NgEmptyPipeModule } from './empty.pipe';
import { NgHeadPipeModule } from './head.pipe';
import { NgInitialPipeModule } from './initial.pipe';
import { NgLastPipeModule } from './last.pipe';
import { NgJoinPipeModule } from './join.pipe';
import { NgTailPipeModule } from './tail.pipe';
import { NgUniqPipeModule } from './uniq.pipe';
import { NgWithoutPipeModule } from './without.pipe';
import { NgMapPipeModule } from './map.pipe';
import { NgWherePipeModule } from './where.pipe';
import { NgFirstOrDefaultPipeModule } from './first-or-default.pipe';
import { NgRangePipeModule } from './range.pipe';
import { NgPluckPipeModule } from './pluck.pipe';
import { NgReversePipeModule } from './reverse.pipe';
import { NgOrderByPipeModule } from './order-by.pipe';
import { NgCountPipeModule } from './count.pipe';
import { NgSomePipeModule } from './some.pipe';
import { NgEveryPipeModule } from './every.pipe';
import { NgShufflePipeModule } from './shuffle.pipe';
import { NgTakePipeModule } from './take.pipe';
import { NgDropPipeModule } from './drop.pipe';
import { NgDeepPipeModule } from './deep.pipe';
import { NgChunkPipeModule } from './chunk.pipe';
import { NgFlattenPipeModule } from './flatten.pipe';
import { NgIntersectionPipeModule } from './intersection.pipe';
import { NgUnionPipeModule } from './union.pipe';
import { NgTakeWhilePipeModule } from './take-while.pipe';
import { NgTakeUntilPipeModule } from './take-until.pipe';
var NgArrayPipesModule = /** @class */ (function () {
    function NgArrayPipesModule() {
    }
    NgArrayPipesModule = tslib_1.__decorate([
        NgModule({
            imports: [
                NgChunkPipeModule,
                NgCountPipeModule,
                NgDeepPipeModule,
                NgDropPipeModule,
                NgEmptyPipeModule,
                NgEveryPipeModule,
                NgFirstOrDefaultPipeModule,
                NgFlattenPipeModule,
                NgHeadPipeModule,
                NgInitialPipeModule,
                NgIntersectionPipeModule,
                NgJoinPipeModule,
                NgLastPipeModule,
                NgMapPipeModule,
                NgOrderByPipeModule,
                NgPluckPipeModule,
                NgRangePipeModule,
                NgReversePipeModule,
                NgShufflePipeModule,
                NgSomePipeModule,
                NgTailPipeModule,
                NgTakeUntilPipeModule,
                NgTakeWhilePipeModule,
                NgTakePipeModule,
                NgUnionPipeModule,
                NgUniqPipeModule,
                NgWherePipeModule,
                NgWithoutPipeModule,
            ],
        })
    ], NgArrayPipesModule);
    return NgArrayPipesModule;
}());
export { NgArrayPipesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1waXBlcy8iLCJzb3VyY2VzIjpbImFycmF5L2FycmF5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDakQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDMUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFrQzFEO0lBQUE7SUFBaUMsQ0FBQztJQUFyQixrQkFBa0I7UUFoQzlCLFFBQVEsQ0FBQztZQUNSLE9BQU8sRUFBRTtnQkFDUCxpQkFBaUI7Z0JBQ2pCLGlCQUFpQjtnQkFDakIsZ0JBQWdCO2dCQUNoQixnQkFBZ0I7Z0JBQ2hCLGlCQUFpQjtnQkFDakIsaUJBQWlCO2dCQUNqQiwwQkFBMEI7Z0JBQzFCLG1CQUFtQjtnQkFDbkIsZ0JBQWdCO2dCQUNoQixtQkFBbUI7Z0JBQ25CLHdCQUF3QjtnQkFDeEIsZ0JBQWdCO2dCQUNoQixnQkFBZ0I7Z0JBQ2hCLGVBQWU7Z0JBQ2YsbUJBQW1CO2dCQUNuQixpQkFBaUI7Z0JBQ2pCLGlCQUFpQjtnQkFDakIsbUJBQW1CO2dCQUNuQixtQkFBbUI7Z0JBQ25CLGdCQUFnQjtnQkFDaEIsZ0JBQWdCO2dCQUNoQixxQkFBcUI7Z0JBQ3JCLHFCQUFxQjtnQkFDckIsZ0JBQWdCO2dCQUNoQixpQkFBaUI7Z0JBQ2pCLGdCQUFnQjtnQkFDaEIsaUJBQWlCO2dCQUNqQixtQkFBbUI7YUFDcEI7U0FDRixDQUFDO09BQ1csa0JBQWtCLENBQUc7SUFBRCx5QkFBQztDQUFBLEFBQWxDLElBQWtDO1NBQXJCLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBOZ0VtcHR5UGlwZU1vZHVsZSB9IGZyb20gJy4vZW1wdHkucGlwZSc7XHJcbmltcG9ydCB7IE5nSGVhZFBpcGVNb2R1bGUgfSBmcm9tICcuL2hlYWQucGlwZSc7XHJcbmltcG9ydCB7IE5nSW5pdGlhbFBpcGVNb2R1bGUgfSBmcm9tICcuL2luaXRpYWwucGlwZSc7XHJcbmltcG9ydCB7IE5nTGFzdFBpcGVNb2R1bGUgfSBmcm9tICcuL2xhc3QucGlwZSc7XHJcbmltcG9ydCB7IE5nSm9pblBpcGVNb2R1bGUgfSBmcm9tICcuL2pvaW4ucGlwZSc7XHJcbmltcG9ydCB7IE5nVGFpbFBpcGVNb2R1bGUgfSBmcm9tICcuL3RhaWwucGlwZSc7XHJcbmltcG9ydCB7IE5nVW5pcVBpcGVNb2R1bGUgfSBmcm9tICcuL3VuaXEucGlwZSc7XHJcbmltcG9ydCB7IE5nV2l0aG91dFBpcGVNb2R1bGUgfSBmcm9tICcuL3dpdGhvdXQucGlwZSc7XHJcbmltcG9ydCB7IE5nTWFwUGlwZU1vZHVsZSB9IGZyb20gJy4vbWFwLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1doZXJlUGlwZU1vZHVsZSB9IGZyb20gJy4vd2hlcmUucGlwZSc7XHJcbmltcG9ydCB7IE5nRmlyc3RPckRlZmF1bHRQaXBlTW9kdWxlIH0gZnJvbSAnLi9maXJzdC1vci1kZWZhdWx0LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1JhbmdlUGlwZU1vZHVsZSB9IGZyb20gJy4vcmFuZ2UucGlwZSc7XHJcbmltcG9ydCB7IE5nUGx1Y2tQaXBlTW9kdWxlIH0gZnJvbSAnLi9wbHVjay5waXBlJztcclxuaW1wb3J0IHsgTmdSZXZlcnNlUGlwZU1vZHVsZSB9IGZyb20gJy4vcmV2ZXJzZS5waXBlJztcclxuaW1wb3J0IHsgTmdPcmRlckJ5UGlwZU1vZHVsZSB9IGZyb20gJy4vb3JkZXItYnkucGlwZSc7XHJcbmltcG9ydCB7IE5nQ291bnRQaXBlTW9kdWxlIH0gZnJvbSAnLi9jb3VudC5waXBlJztcclxuaW1wb3J0IHsgTmdTb21lUGlwZU1vZHVsZSB9IGZyb20gJy4vc29tZS5waXBlJztcclxuaW1wb3J0IHsgTmdFdmVyeVBpcGVNb2R1bGUgfSBmcm9tICcuL2V2ZXJ5LnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1NodWZmbGVQaXBlTW9kdWxlIH0gZnJvbSAnLi9zaHVmZmxlLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1Rha2VQaXBlTW9kdWxlIH0gZnJvbSAnLi90YWtlLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0Ryb3BQaXBlTW9kdWxlIH0gZnJvbSAnLi9kcm9wLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0RlZXBQaXBlTW9kdWxlIH0gZnJvbSAnLi9kZWVwLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ0NodW5rUGlwZU1vZHVsZSB9IGZyb20gJy4vY2h1bmsucGlwZSc7XHJcbmltcG9ydCB7IE5nRmxhdHRlblBpcGVNb2R1bGUgfSBmcm9tICcuL2ZsYXR0ZW4ucGlwZSc7XHJcbmltcG9ydCB7IE5nSW50ZXJzZWN0aW9uUGlwZU1vZHVsZSB9IGZyb20gJy4vaW50ZXJzZWN0aW9uLnBpcGUnO1xyXG5pbXBvcnQgeyBOZ1VuaW9uUGlwZU1vZHVsZSB9IGZyb20gJy4vdW5pb24ucGlwZSc7XHJcbmltcG9ydCB7IE5nVGFrZVdoaWxlUGlwZU1vZHVsZSB9IGZyb20gJy4vdGFrZS13aGlsZS5waXBlJztcclxuaW1wb3J0IHsgTmdUYWtlVW50aWxQaXBlTW9kdWxlIH0gZnJvbSAnLi90YWtlLXVudGlsLnBpcGUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBOZ0NodW5rUGlwZU1vZHVsZSxcclxuICAgIE5nQ291bnRQaXBlTW9kdWxlLFxyXG4gICAgTmdEZWVwUGlwZU1vZHVsZSxcclxuICAgIE5nRHJvcFBpcGVNb2R1bGUsXHJcbiAgICBOZ0VtcHR5UGlwZU1vZHVsZSxcclxuICAgIE5nRXZlcnlQaXBlTW9kdWxlLFxyXG4gICAgTmdGaXJzdE9yRGVmYXVsdFBpcGVNb2R1bGUsXHJcbiAgICBOZ0ZsYXR0ZW5QaXBlTW9kdWxlLFxyXG4gICAgTmdIZWFkUGlwZU1vZHVsZSxcclxuICAgIE5nSW5pdGlhbFBpcGVNb2R1bGUsXHJcbiAgICBOZ0ludGVyc2VjdGlvblBpcGVNb2R1bGUsXHJcbiAgICBOZ0pvaW5QaXBlTW9kdWxlLFxyXG4gICAgTmdMYXN0UGlwZU1vZHVsZSxcclxuICAgIE5nTWFwUGlwZU1vZHVsZSxcclxuICAgIE5nT3JkZXJCeVBpcGVNb2R1bGUsXHJcbiAgICBOZ1BsdWNrUGlwZU1vZHVsZSxcclxuICAgIE5nUmFuZ2VQaXBlTW9kdWxlLFxyXG4gICAgTmdSZXZlcnNlUGlwZU1vZHVsZSxcclxuICAgIE5nU2h1ZmZsZVBpcGVNb2R1bGUsXHJcbiAgICBOZ1NvbWVQaXBlTW9kdWxlLFxyXG4gICAgTmdUYWlsUGlwZU1vZHVsZSxcclxuICAgIE5nVGFrZVVudGlsUGlwZU1vZHVsZSxcclxuICAgIE5nVGFrZVdoaWxlUGlwZU1vZHVsZSxcclxuICAgIE5nVGFrZVBpcGVNb2R1bGUsXHJcbiAgICBOZ1VuaW9uUGlwZU1vZHVsZSxcclxuICAgIE5nVW5pcVBpcGVNb2R1bGUsXHJcbiAgICBOZ1doZXJlUGlwZU1vZHVsZSxcclxuICAgIE5nV2l0aG91dFBpcGVNb2R1bGUsXHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE5nQXJyYXlQaXBlc01vZHVsZSB7fVxyXG4iXX0=